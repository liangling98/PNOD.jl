------------------------------------------------------------------------------------
x0_int = [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.10919209572237816
------------------------------------------------------------------------------------
          1|          1|          3| -3.40162e-02 1.09192e-01 1.4e-01 4.2e+00| 9.6e-02 7.1e-02|   6
 [Integer solution found!]
 [Integer solution found!]
 [Integer solution found!]
         15|         15|         17| -3.22512e-02 -3.16101e-02 6.4e-04 2.0e-02| 8.2e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.81743514
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
solution = -0.031610081348757674
num_nodes = 17
stage = 0
branch_count = [1, 0, 0, 1, 0, 0, 3, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0006411626458122724
------------------------------------------------------------------------------------

(criterion, corr) = ("A", false)
(m, n, seed) = (50, 5, 1)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 5.612903358298072
------------------------------------------------------------------------------------
          1|          1|          3| 1.38508e+00 5.61290e+00 4.2e+00 3.1e+00| 1.6e-01 1.6e-01|  12
 [Integer solution found!]
         39|         29|         57| 1.43229e+00 1.43476e+00 2.5e-03 1.7e-03| 1.8e-01 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.183976715
sol_x = [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = 1.4347621303809919
num_nodes = 57
stage = 0
branch_count = [0, 4, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 0, 1, 0, 5, 4, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0024719634138909985
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.434762130381003
(criterion, corr) = ("A", false)
(m, n, seed) = (50, 5, 2)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.220960528132472
------------------------------------------------------------------------------------
          1|          1|          3| 1.41760e+00 4.22096e+00 2.8e+00 2.0e+00| 1.2e-02 1.2e-02|  10
 [Integer solution found!]
         15|          9|         25| 1.44202e+00 1.44263e+00 6.1e-04 4.2e-04| 1.7e-02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.016404776
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = 1.4426303305829737
num_nodes = 25
stage = 0
branch_count = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 1, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0006114746117069636
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.4426303305829846
(criterion, corr) = ("A", false)
(m, n, seed) = (50, 5, 3)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 3.956031826739805
------------------------------------------------------------------------------------
          1|          1|          3| 1.53523e+00 3.95603e+00 2.4e+00 1.6e+00| 2.4e-02 2.4e-02|   9
 [Integer solution found!]
        193|        245|        245| 1.59440e+00 1.59991e+00 5.5e-03 3.5e-03| 1.3e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.127891455
sol_x = [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]
solution = 1.5999112124110755
num_nodes = 245
stage = 0
branch_count = [0, 10, 7, 0, 1, 0, 1, 9, 6, 0, 0, 0, 0, 6, 1, 6, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 7, 1, 0, 0, 10, 5, 0, 1, 1, 0, 0, 0, 1, 3, 0, 0, 10, 6, 7, 0, 0, 14, 5, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.005508065886071778
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.5999112124110888
(criterion, corr) = ("A", false)
(m, n, seed) = (50, 5, 4)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 3.984950190695877
------------------------------------------------------------------------------------
          1|          1|          3| 1.53137e+00 3.98495e+00 2.5e+00 1.6e+00| 1.4e-02 1.4e-02|   9
 [Integer solution found!]
 [Integer solution found!]
         99|        187|        195| 1.57678e+00 1.57683e+00 4.5e-05 2.8e-05| 5.7e-02 1.0e-03|   0
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.057006171
sol_x = [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = 1.5768268647466934
num_nodes = 195
stage = 0
branch_count = [0, 11, 0, 4, 1, 1, 0, 0, 0, 4, 7, 0, 0, 2, 1, 0, 0, 9, 0, 3, 0, 3, 3, 6, 1, 0, 0, 0, 3, 0, 0, 0, 0, 1, 0, 4, 0, 0, 4, 8, 5, 4, 0, 1, 6, 0, 0, 0, 0, 5]
is_feasible = true
status = "optimal"
dual_gap = 4.4720798112241056e-5
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.5768268647467056
(criterion, corr) = ("A", false)
(m, n, seed) = (50, 5, 5)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.14303315916678
------------------------------------------------------------------------------------
          1|          1|          3| 1.53979e+00 4.14303e+00 2.6e+00 1.7e+00| 1.8e-02 1.8e-02|   9
 [Integer solution found!]
         17|         29|         33| 1.56859e+00 1.56859e+00 6.4e-15 4.1e-15| 2.3e-02 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.022355107
sol_x = [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
solution = 1.5685917690415394
num_nodes = 33
stage = 1
branch_count = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 2, 0, 1, 1, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 6.439293542825908e-15
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.568591769041552
(criterion, corr) = ("A", false)
(m, n, seed) = (60, 6, 1)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.981077759554624
------------------------------------------------------------------------------------
          1|          1|          3| 1.55486e+00 4.98108e+00 3.4e+00 2.2e+00| 1.6e-02 1.6e-02|  11
 [Integer solution found!]
        125|        231|        247| 1.60509e+00 1.60524e+00 1.4e-04 8.9e-05| 8.0e-02 0.0e+00|   3
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.080268504
sol_x = [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
solution = 1.6052368854915917
num_nodes = 247
stage = 0
branch_count = [0, 6, 0, 3, 0, 13, 4, 1, 3, 2, 1, 2, 0, 0, 6, 0, 0, 10, 0, 2, 0, 0, 4, 6, 1, 5, 5, 2, 0, 0, 1, 0, 0, 1, 0, 0, 0, 10, 0, 6, 0, 0, 0, 0, 6, 2, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 1, 0, 0, 8]
is_feasible = true
status = "optimal"
dual_gap = 0.00014236856211868876
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.6052368854916022
(criterion, corr) = ("A", false)
(m, n, seed) = (60, 6, 2)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 5.386244925089758
------------------------------------------------------------------------------------
          1|          1|          3| 1.56545e+00 5.38624e+00 3.8e+00 2.4e+00| 1.2e-02 1.2e-02|  13
 [Integer solution found!]
        153|         73|        281| 1.60470e+00 1.60574e+00 1.0e-03 6.5e-04| 8.3e-02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.082962722
sol_x = [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
solution = 1.6057357136510162
num_nodes = 281
stage = 0
branch_count = [5, 0, 9, 0, 0, 7, 6, 7, 0, 0, 5, 0, 2, 3, 0, 1, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 8, 7, 0, 7, 0, 0, 0, 1, 0, 0, 0, 19, 10, 0, 5, 0, 0, 12, 0, 4, 0, 9, 0, 0, 0, 0, 1, 4, 0, 1, 0, 0, 0, 2]
is_feasible = true
status = "optimal"
dual_gap = 0.0010362893339939117
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.6057357136510273
(criterion, corr) = ("A", false)
(m, n, seed) = (60, 6, 3)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.042319041407121
------------------------------------------------------------------------------------
          1|          1|          3| 1.60497e+00 4.04232e+00 2.4e+00 1.5e+00| 2.0e-02 2.0e-02|   9
 [Integer solution found!]
 [Integer solution found!]
        113|        223|        223| 1.64877e+00 1.64878e+00 1.3e-05 7.7e-06| 7.5e-02 1.0e-03|   0
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.074720519
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0]
solution = 1.6487826997853874
num_nodes = 223
stage = 0
branch_count = [0, 0, 0, 1, 0, 0, 0, 3, 4, 0, 0, 1, 3, 0, 1, 0, 10, 0, 0, 14, 2, 1, 0, 0, 0, 0, 7, 3, 1, 0, 2, 4, 7, 3, 0, 0, 6, 0, 3, 8, 0, 4, 0, 0, 10, 0, 0, 1, 2, 0, 1, 1, 0, 2, 3, 0, 1, 0, 2, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.263473244872415e-5
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.6487826997853987
(criterion, corr) = ("A", false)
(m, n, seed) = (60, 6, 4)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 6.500223067774576
------------------------------------------------------------------------------------
          1|          1|          3| 1.62656e+00 6.50022e+00 4.9e+00 3.0e+00| 2.0e-02 2.0e-02|  15
 [Integer solution found!]
        301|        493|        537| 1.68307e+00 1.68441e+00 1.3e-03 8.0e-04| 1.7e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.17529797
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
solution = 1.684410982217829
num_nodes = 537
stage = 0
branch_count = [12, 0, 0, 2, 7, 0, 8, 0, 1, 24, 2, 1, 0, 9, 0, 0, 16, 0, 13, 2, 10, 6, 0, 0, 14, 0, 0, 0, 9, 2, 0, 23, 0, 7, 9, 26, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 0, 0, 0, 20, 0, 7, 0, 11, 2, 12, 0, 1, 0, 6]
is_feasible = true
status = "optimal"
dual_gap = 0.0013418288053297367
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.6844109822178408
(criterion, corr) = ("A", false)
(m, n, seed) = (60, 6, 5)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.203090991986228
------------------------------------------------------------------------------------
          1|          1|          3| 1.55625e+00 4.20309e+00 2.6e+00 1.7e+00| 1.6e-02 1.5e-02|  10
 [Integer solution found!]
        273|        519|        545| 1.62278e+00 1.62278e+00 7.1e-15 4.4e-15| 1.4e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.139307021
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
solution = 1.6227826289011575
num_nodes = 545
stage = 1
branch_count = [1, 0, 4, 0, 0, 3, 4, 11, 5, 0, 0, 6, 0, 5, 2, 0, 2, 0, 5, 0, 20, 0, 0, 0, 0, 1, 0, 0, 15, 0, 4, 0, 25, 1, 15, 6, 2, 0, 0, 26, 4, 0, 0, 0, 19, 4, 7, 18, 23, 0, 0, 0, 14, 0, 0, 7, 0, 0, 13, 0]
is_feasible = true
status = "optimal"
dual_gap = 7.105427357601002e-15
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.6227826289011686
(criterion, corr) = ("A", false)
(m, n, seed) = (80, 8, 1)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.613671566229502
------------------------------------------------------------------------------------
          1|          1|          3| 1.58998e+00 4.61367e+00 3.0e+00 1.9e+00| 1.6e-02 1.6e-02|  11
 [Integer solution found!]
 [Integer solution found!]
       1123|        897|       2239| 1.64543e+00 1.64546e+00 2.1e-05 1.3e-05| 8.1e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.808919159
sol_x = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
solution = 1.6454551472702876
num_nodes = 2239
stage = 0
branch_count = [0, 0, 0, 16, 40, 67, 37, 32, 0, 33, 29, 10, 41, 0, 0, 0, 7, 0, 0, 0, 5, 32, 62, 46, 52, 26, 0, 13, 0, 0, 17, 8, 0, 0, 0, 0, 0, 2, 0, 8, 0, 9, 0, 15, 1, 54, 0, 5, 14, 16, 17, 23, 0, 36, 4, 14, 17, 42, 21, 35, 0, 32, 31, 0, 2, 8, 0, 2, 0, 0, 0, 23, 0, 74, 2, 5, 34, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 2.1310107196859107e-5
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.6454551472702956
(criterion, corr) = ("A", false)
(m, n, seed) = (80, 8, 2)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.3193332076879125
------------------------------------------------------------------------------------
          1|          1|          3| 1.75373e+00 4.31933e+00 2.6e+00 1.5e+00| 1.4e-02 1.4e-02|  11
 [Integer solution found!]
        671|        703|       1321| 1.80697e+00 1.80715e+00 1.8e-04 1.0e-04| 5.8e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.576218781
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
solution = 1.8071468667105688
num_nodes = 1321
stage = 0
branch_count = [15, 0, 36, 43, 0, 1, 0, 32, 29, 2, 0, 0, 20, 0, 1, 3, 0, 0, 20, 10, 34, 0, 36, 8, 0, 0, 3, 3, 0, 4, 11, 4, 14, 9, 0, 41, 3, 9, 0, 31, 35, 2, 5, 9, 0, 1, 0, 4, 8, 0, 13, 1, 1, 1, 0, 3, 0, 0, 0, 8, 6, 20, 4, 1, 0, 16, 2, 35, 15, 0, 2, 0, 0, 31, 0, 0, 0, 2, 13, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00018049960614985316
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.8071468667105783
(criterion, corr) = ("A", false)
(m, n, seed) = (80, 8, 3)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 6.792186893271689
------------------------------------------------------------------------------------
          1|          1|          3| 1.71135e+00 6.79219e+00 5.1e+00 3.0e+00| 2.0e-02 2.0e-02|  15
 [Integer solution found!]
       2527|       4439|       4965| 1.78005e+00 1.78027e+00 2.2e-04 1.2e-04| 2.2e+00 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 2.155056621
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = 1.7802651806909568
num_nodes = 4965
stage = 0
branch_count = [36, 2, 0, 1, 0, 20, 2, 11, 31, 0, 0, 0, 6, 3, 94, 15, 17, 0, 142, 9, 70, 96, 8, 0, 13, 119, 50, 0, 13, 41, 0, 96, 3, 162, 54, 0, 32, 92, 1, 177, 58, 0, 0, 34, 38, 25, 194, 0, 0, 8, 0, 22, 68, 4, 12, 2, 19, 0, 109, 0, 4, 2, 0, 8, 1, 0, 64, 2, 73, 2, 0, 8, 0, 0, 140, 26, 39, 33, 71, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00021701135515073133
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.7802651806909662
(criterion, corr) = ("A", false)
(m, n, seed) = (80, 8, 4)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.1607532747172895
------------------------------------------------------------------------------------
          1|          1|          3| 1.67776e+00 4.16075e+00 2.5e+00 1.5e+00| 1.3e-02 1.3e-02|  11
 [Integer solution found!]
       1521|       2265|       3029| 1.75101e+00 1.75104e+00 3.3e-05 1.9e-05| 1.0e+00 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.998396376
sol_x = [1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0]
solution = 1.7510427784339664
num_nodes = 3029
stage = 0
branch_count = [90, 0, 43, 0, 3, 0, 30, 4, 0, 3, 35, 0, 0, 3, 11, 0, 11, 8, 79, 0, 0, 39, 37, 54, 20, 26, 0, 0, 5, 8, 0, 33, 17, 92, 61, 84, 0, 27, 65, 50, 0, 21, 0, 0, 0, 0, 0, 74, 0, 5, 7, 0, 2, 5, 0, 0, 44, 5, 1, 0, 61, 0, 0, 89, 1, 0, 0, 44, 6, 23, 35, 56, 0, 0, 0, 1, 34, 0, 56, 6]
is_feasible = true
status = "optimal"
dual_gap = 3.3417472726338104e-5
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.7510427784339757
(criterion, corr) = ("A", false)
(m, n, seed) = (80, 8, 5)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 5.958423702422588
------------------------------------------------------------------------------------
          1|          1|          3| 1.70781e+00 5.95842e+00 4.3e+00 2.5e+00| 2.3e-02 2.3e-02|  13
 [Integer solution found!]
       1063|       1051|       2053| 1.76417e+00 1.76461e+00 4.4e-04 2.5e-04| 9.5e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.952244795
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0]
solution = 1.7646070490079446
num_nodes = 2053
stage = 0
branch_count = [18, 17, 0, 1, 0, 0, 14, 24, 0, 3, 0, 0, 39, 23, 0, 2, 0, 16, 9, 41, 0, 0, 15, 43, 0, 0, 38, 39, 0, 12, 35, 0, 17, 47, 75, 0, 0, 1, 48, 25, 0, 9, 0, 1, 0, 0, 45, 7, 3, 0, 59, 35, 8, 1, 2, 0, 30, 0, 0, 29, 0, 0, 0, 5, 0, 22, 0, 24, 2, 0, 0, 0, 24, 27, 16, 5, 33, 0, 37, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00043829907803760726
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.7646070490079533
(criterion, corr) = ("A", false)
(m, n, seed) = (100, 10, 1)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 5.851311785252919
------------------------------------------------------------------------------------
          1|          1|          3| 1.77929e+00 5.85131e+00 4.1e+00 2.3e+00| 2.3e-02 2.3e-02|  14
      10000|      13276|      20001| 1.85241e+00 5.85131e+00 4.0e+00 2.2e+00| 1.2e+01 2.0e-03|   3
      20000|      24606|      40001| 1.85995e+00 5.85131e+00 4.0e+00 2.1e+00| 2.4e+01 1.0e-03|   3
 [Integer solution found!]
      23881|      23723|      46313| 1.86158e+00 1.86193e+00 3.5e-04 1.9e-04| 2.8e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 28.045584493
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0]
solution = 1.8619310586954503
num_nodes = 46313
stage = 0
branch_count = [3, 725, 0, 233, 0, 1287, 127, 54, 0, 704, 68, 446, 472, 0, 5, 1322, 1, 0, 523, 512, 0, 3, 454, 55, 147, 0, 482, 75, 773, 132, 27, 347, 0, 109, 2, 48, 93, 521, 1, 27, 0, 818, 582, 279, 174, 305, 0, 593, 76, 70, 365, 0, 2, 126, 0, 8, 472, 184, 140, 52, 0, 4, 0, 3, 1256, 231, 4, 671, 0, 312, 208, 290, 9, 20, 349, 125, 0, 39, 380, 17, 610, 1, 469, 1, 6, 1123, 0, 673, 55, 318, 11, 701, 0, 612, 0, 178, 64, 392, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00034788622182135853
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.8619310586954583
(criterion, corr) = ("A", false)
(m, n, seed) = (100, 10, 2)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 5.108314113644794
------------------------------------------------------------------------------------
          1|          1|          3| 1.85279e+00 5.10831e+00 3.3e+00 1.8e+00| 2.7e-02 2.7e-02|  12
      10000|       9992|      20001| 1.92617e+00 5.10831e+00 3.2e+00 1.7e+00| 1.2e+01 1.0e-03|   3
 [Integer solution found!]
 [Integer solution found!]
      14149|      15291|      23003| 1.92903e+00 1.92995e+00 9.2e-04 4.8e-04| 1.6e+01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 15.868839938
sol_x = [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = 1.9299503219067833
num_nodes = 23003
stage = 0
branch_count = [42, 273, 5, 699, 0, 0, 0, 50, 0, 0, 0, 2, 0, 0, 2, 36, 0, 109, 246, 300, 587, 167, 0, 0, 0, 17, 116, 20, 1, 130, 209, 254, 0, 86, 180, 0, 0, 403, 150, 50, 1, 0, 59, 466, 13, 0, 0, 2, 1, 590, 0, 4, 333, 6, 7, 77, 295, 3, 347, 0, 0, 54, 61, 121, 21, 1, 0, 14, 382, 461, 14, 0, 43, 164, 47, 264, 1, 7, 97, 272, 470, 85, 252, 198, 201, 0, 156, 118, 271, 91, 42, 28, 298, 221, 1, 140, 18, 26, 263, 260]
is_feasible = true
status = "optimal"
dual_gap = 0.0009194402218468678
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.9299503219067922
(criterion, corr) = ("A", false)
(m, n, seed) = (100, 10, 3)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.981302026667862
------------------------------------------------------------------------------------
          1|          1|          3| 1.81293e+00 4.98130e+00 3.2e+00 1.7e+00| 3.1e-02 3.1e-02|  11
      10000|       7926|      20001| 1.88350e+00 4.98130e+00 3.1e+00 1.6e+00| 1.5e+01 2.0e-03|   3
      20000|      18014|      40001| 1.89042e+00 4.98130e+00 3.1e+00 1.6e+00| 2.8e+01 1.0e-03|   3
      30000|      34652|      60001| 1.89453e+00 4.98130e+00 3.1e+00 1.6e+00| 4.1e+01 1.0e-03|   3
      40000|      32156|      80001| 1.89752e+00 4.98130e+00 3.1e+00 1.6e+00| 5.5e+01 2.0e-03|   3
      50000|      63576|     100001| 1.89985e+00 4.98130e+00 3.1e+00 1.6e+00| 6.8e+01 1.0e-03|   3
 [Integer solution found!]
      56895|     100333|     104797| 1.90037e+00 1.90124e+00 8.7e-04 4.6e-04| 7.7e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 76.800800049
sol_x = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
solution = 1.9012425830554844
num_nodes = 104797
stage = 0
branch_count = [0, 90, 0, 1056, 24, 2480, 981, 1435, 219, 455, 734, 391, 0, 321, 12, 754, 730, 0, 341, 0, 87, 86, 578, 0, 1297, 595, 384, 0, 61, 0, 1182, 1186, 379, 904, 1226, 93, 613, 18, 0, 8, 830, 90, 19, 3272, 236, 1272, 680, 448, 613, 4, 0, 2, 994, 0, 1594, 384, 233, 240, 2543, 1099, 2, 82, 1544, 135, 185, 0, 199, 1, 291, 0, 370, 11, 946, 1, 1, 297, 6, 225, 165, 621, 68, 607, 1387, 272, 0, 10, 1504, 2211, 33, 981, 0, 1512, 1169, 6, 0, 845, 12, 733, 1431, 1262]
is_feasible = true
status = "optimal"
dual_gap = 0.0008734829397121224
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.9012425830554929
(criterion, corr) = ("A", false)
(m, n, seed) = (100, 10, 4)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 7.992736530116479
------------------------------------------------------------------------------------
          1|          1|          3| 1.78272e+00 7.99274e+00 6.2e+00 3.5e+00| 2.0e-02 2.0e-02|  17
      10000|      11922|      20001| 1.84937e+00 7.99274e+00 6.1e+00 3.3e+00| 1.5e+01 2.0e-03|   3
      20000|      23124|      40001| 1.85630e+00 7.99274e+00 6.1e+00 3.3e+00| 3.0e+01 1.0e-03|   3
      30000|      30436|      60001| 1.86044e+00 7.99274e+00 6.1e+00 3.3e+00| 4.4e+01 2.0e-03|   3
      40000|      44814|      80001| 1.86346e+00 7.99274e+00 6.1e+00 3.3e+00| 5.7e+01 2.0e-03|   3
      50000|      49440|     100001| 1.86584e+00 7.99274e+00 6.1e+00 3.3e+00| 7.1e+01 1.0e-03|   3
      60000|      71336|     120001| 1.86774e+00 7.99274e+00 6.1e+00 3.3e+00| 8.3e+01 2.0e-03|   2
      70000|      53990|     140001| 1.86942e+00 7.99274e+00 6.1e+00 3.3e+00| 9.7e+01 1.0e-03|   3
      80000|      90518|     160001| 1.87083e+00 7.99274e+00 6.1e+00 3.3e+00| 1.1e+02 1.0e-03|   3
 [Integer solution found!]
      90000|     115766|     179985| 1.87212e+00 1.90390e+00 3.2e-02 1.7e-02| 1.2e+02 2.0e-03|   3
     100000|     115054|     199949| 1.87324e+00 1.90390e+00 3.1e-02 1.6e-02| 1.4e+02 2.0e-03|   3
 [Integer solution found!]
 [Integer solution found!]
     105961|     100439|     205265| 1.87359e+00 1.87387e+00 2.8e-04 1.5e-04| 1.5e+02 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 146.6517893
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = 1.8738701093052712
num_nodes = 205265
stage = 0
branch_count = [4108, 1948, 475, 8, 0, 2640, 511, 64, 0, 728, 1679, 0, 964, 0, 433, 12, 0, 5, 1198, 2649, 288, 68, 909, 1383, 2733, 651, 1513, 22, 2684, 2164, 825, 427, 541, 399, 1285, 2105, 757, 255, 2574, 1992, 503, 20, 627, 2627, 1812, 340, 3, 562, 99, 6289, 16, 1901, 720, 79, 902, 4500, 1392, 0, 1626, 2173, 2890, 1026, 319, 1443, 131, 1550, 0, 0, 0, 112, 2625, 1291, 3, 965, 0, 33, 0, 394, 78, 362, 0, 2148, 3254, 19, 1026, 449, 0, 15, 0, 1316, 914, 2286, 533, 2883, 871, 300, 4188, 1944, 76, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00028474889743268506
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.8738701093052792
(criterion, corr) = ("A", false)
(m, n, seed) = (100, 10, 5)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 11.053475388329439
------------------------------------------------------------------------------------
          1|          1|          3| 1.79594e+00 1.10535e+01 9.3e+00 5.2e+00| 3.5e-02 3.5e-02|  21
      10000|      10598|      20001| 1.85472e+00 1.10535e+01 9.2e+00 5.0e+00| 1.6e+01 2.0e-03|   3
      20000|      23822|      40001| 1.86119e+00 1.10535e+01 9.2e+00 4.9e+00| 2.8e+01 2.0e-03|   3
 [Integer solution found!]
      29367|      29895|      58569| 1.86484e+00 1.86486e+00 2.6e-05 1.4e-05| 4.0e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 39.711265512
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = 1.864863107860952
num_nodes = 58569
stage = 0
branch_count = [567, 11, 401, 5, 0, 35, 566, 290, 336, 185, 496, 38, 436, 692, 0, 0, 0, 190, 412, 508, 895, 536, 959, 140, 750, 0, 624, 1038, 0, 268, 0, 662, 0, 117, 30, 125, 241, 642, 81, 642, 17, 394, 0, 54, 140, 40, 611, 1499, 3, 0, 348, 0, 100, 27, 31, 10, 8, 0, 0, 417, 41, 26, 327, 0, 0, 368, 568, 3, 1591, 0, 183, 517, 161, 0, 53, 8, 405, 736, 432, 522, 255, 696, 0, 0, 28, 1, 696, 341, 661, 515, 274, 543, 132, 1989, 39, 0, 121, 108, 327, 0]
is_feasible = true
status = "optimal"
dual_gap = 2.554569056689715e-5
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.8648631078609605
(criterion, corr) = ("A", false)
(m, n, seed) = (120, 12, 1)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.242818172514909
------------------------------------------------------------------------------------
          1|          1|          3| 1.81273e+00 4.24282e+00 2.4e+00 1.3e+00| 3.1e-02 3.1e-02|  11
      10000|      11342|      20001| 1.87415e+00 4.24282e+00 2.4e+00 1.3e+00| 1.8e+01 2.0e-03|   3
      20000|      26088|      40001| 1.88001e+00 4.24282e+00 2.4e+00 1.3e+00| 3.5e+01 3.0e-03|   3
      30000|      31070|      60001| 1.88353e+00 4.24282e+00 2.4e+00 1.3e+00| 5.2e+01 1.0e-03|   3
      40000|      43358|      80001| 1.88604e+00 4.24282e+00 2.4e+00 1.2e+00| 6.9e+01 2.0e-03|   3
      50000|      56924|     100001| 1.88794e+00 4.24282e+00 2.4e+00 1.2e+00| 8.6e+01 1.0e-03|   3
      60000|      49398|     120001| 1.88954e+00 4.24282e+00 2.4e+00 1.2e+00| 1.0e+02 2.0e-03|   3
      70000|      56136|     140001| 1.89090e+00 4.24282e+00 2.4e+00 1.2e+00| 1.2e+02 2.0e-03|   3
      80000|      89410|     160001| 1.89210e+00 4.24282e+00 2.4e+00 1.2e+00| 1.4e+02 2.0e-03|   3
      90000|      64444|     180001| 1.89312e+00 4.24282e+00 2.3e+00 1.2e+00| 1.6e+02 2.0e-03|   3
     100000|     138472|     200001| 1.89407e+00 4.24282e+00 2.3e+00 1.2e+00| 1.8e+02 2.0e-03|   4
     110000|     115914|     220001| 1.89492e+00 4.24282e+00 2.3e+00 1.2e+00| 2.0e+02 1.0e-03|   3
     120000|     110750|     240001| 1.89571e+00 4.24282e+00 2.3e+00 1.2e+00| 2.2e+02 3.0e-03|   3
     130000|      63384|     260001| 1.89642e+00 4.24282e+00 2.3e+00 1.2e+00| 2.4e+02 2.0e-03|   3
     140000|     135978|     280001| 1.89709e+00 4.24282e+00 2.3e+00 1.2e+00| 2.6e+02 2.0e-03|   3
     150000|     174846|     300001| 1.89773e+00 4.24282e+00 2.3e+00 1.2e+00| 2.8e+02 4.1e-02|   3
     160000|     277232|     320001| 1.89830e+00 4.24282e+00 2.3e+00 1.2e+00| 3.0e+02 1.0e-03|   2
     170000|     249170|     340001| 1.89886e+00 4.24282e+00 2.3e+00 1.2e+00| 3.2e+02 2.0e-03|   3
     180000|     187392|     360001| 1.89939e+00 4.24282e+00 2.3e+00 1.2e+00| 3.5e+02 1.0e-03|   3
     190000|     204868|     380001| 1.89988e+00 4.24282e+00 2.3e+00 1.2e+00| 3.7e+02 1.0e-03|   3
     200000|     274860|     400001| 1.90034e+00 4.24282e+00 2.3e+00 1.2e+00| 3.9e+02 2.0e-03|   3
     210000|     272238|     420001| 1.90078e+00 4.24282e+00 2.3e+00 1.2e+00| 4.1e+02 1.0e-03|   3
     220000|     326580|     440001| 1.90120e+00 4.24282e+00 2.3e+00 1.2e+00| 4.3e+02 2.0e-03|   3
     230000|     365740|     460001| 1.90161e+00 4.24282e+00 2.3e+00 1.2e+00| 4.5e+02 2.0e-03|   3
     240000|     343160|     480001| 1.90201e+00 4.24282e+00 2.3e+00 1.2e+00| 4.8e+02 2.0e-03|   2
     250000|     227072|     500001| 1.90239e+00 4.24282e+00 2.3e+00 1.2e+00| 5.0e+02 2.0e-03|   3
     260000|     422368|     520001| 1.90275e+00 4.24282e+00 2.3e+00 1.2e+00| 5.2e+02 3.0e-03|   3
     270000|     274712|     540001| 1.90310e+00 4.24282e+00 2.3e+00 1.2e+00| 5.4e+02 4.0e-03|   3
     280000|     328484|     560001| 1.90344e+00 4.24282e+00 2.3e+00 1.2e+00| 5.7e+02 3.0e-03|   3
     290000|     302486|     580001| 1.90376e+00 4.24282e+00 2.3e+00 1.2e+00| 5.9e+02 2.0e-03|   3
     300000|     267744|     600001| 1.90406e+00 4.24282e+00 2.3e+00 1.2e+00| 6.1e+02 2.0e-03|   3
     310000|     280440|     620001| 1.90437e+00 4.24282e+00 2.3e+00 1.2e+00| 6.3e+02 3.0e-03|   3
     320000|     476902|     640001| 1.90467e+00 4.24282e+00 2.3e+00 1.2e+00| 6.6e+02 1.0e-03|   2
     330000|     284062|     660001| 1.90495e+00 4.24282e+00 2.3e+00 1.2e+00| 6.8e+02 2.0e-03|   3
     340000|     375902|     680001| 1.90523e+00 4.24282e+00 2.3e+00 1.2e+00| 7.0e+02 3.0e-03|   3
     350000|     368182|     700001| 1.90550e+00 4.24282e+00 2.3e+00 1.2e+00| 7.2e+02 2.0e-03|   3
     360000|     599464|     720001| 1.90576e+00 4.24282e+00 2.3e+00 1.2e+00| 7.4e+02 3.0e-03|   3
     370000|     407666|     740001| 1.90601e+00 4.24282e+00 2.3e+00 1.2e+00| 7.7e+02 2.0e-03|   3
     380000|     275248|     760001| 1.90625e+00 4.24282e+00 2.3e+00 1.2e+00| 7.9e+02 4.0e-03|   3
     390000|     109788|     780001| 1.90650e+00 4.24282e+00 2.3e+00 1.2e+00| 8.1e+02 2.0e-03|   3
     400000|     573584|     800001| 1.90674e+00 4.24282e+00 2.3e+00 1.2e+00| 8.4e+02 2.0e-03|   3
     410000|     488822|     820001| 1.90697e+00 4.24282e+00 2.3e+00 1.2e+00| 8.6e+02 2.0e-03|   3
     420000|     382096|     840001| 1.90720e+00 4.24282e+00 2.3e+00 1.2e+00| 8.8e+02 3.0e-03|   3
     430000|     302910|     860001| 1.90742e+00 4.24282e+00 2.3e+00 1.2e+00| 9.0e+02 3.0e-03|   3
     440000|     362076|     880001| 1.90763e+00 4.24282e+00 2.3e+00 1.2e+00| 9.2e+02 2.0e-03|   2
     450000|     713816|     900001| 1.90785e+00 4.24282e+00 2.3e+00 1.2e+00| 9.5e+02 3.0e-03|   3
     460000|     535070|     920001| 1.90805e+00 4.24282e+00 2.3e+00 1.2e+00| 9.7e+02 2.0e-03|   3
     470000|     587628|     940001| 1.90826e+00 4.24282e+00 2.3e+00 1.2e+00| 9.9e+02 2.0e-03|   3
 [Integer solution found!]
     480000|     467442|     943067| 1.90843e+00 1.90900e+00 5.6e-04 3.0e-04| 1.0e+03 1.0e-03|   4
 [Node cut because it is worse than the incumbent!]
     490000|     923864|     943067| 1.90843e+00 1.90900e+00 5.6e-04 3.0e-04| 1.0e+03 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
     500000|     554174|     943067| 1.90843e+00 1.90900e+00 5.6e-04 3.0e-04| 1.1e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     508619|     252773|     943067| 1.90843e+00 1.90900e+00 5.6e-04 3.0e-04| 1.1e+03 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 1074.098213002
sol_x = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]
solution = 1.9089979861849833
num_nodes = 943067
stage = 0
branch_count = [763, 10776, 1353, 1707, 6134, 15149, 6038, 10587, 433, 9701, 3547, 208, 0, 3552, 0, 9361, 92, 2762, 2662, 6483, 163, 2554, 11325, 8716, 2491, 16773, 3792, 9211, 86, 744, 5940, 3072, 0, 2993, 0, 1891, 419, 2566, 0, 28, 831, 69, 117, 2897, 4192, 15169, 0, 6032, 2488, 14027, 1174, 1, 9637, 795, 12, 0, 7052, 805, 8332, 3288, 2549, 6619, 3482, 28, 16418, 426, 406, 1763, 78, 1117, 5311, 4780, 3, 13316, 8417, 2988, 0, 5654, 0, 0, 4760, 110, 40, 1266, 2, 4578, 7009, 13649, 24, 154, 8229, 83, 3478, 6201, 7730, 9031, 6845, 6171, 2126, 2171, 9550, 7929, 4357, 3391, 3228, 942, 0, 5802, 42, 884, 1459, 3363, 15123, 1121, 26, 7446, 433, 50, 1282, 7103]
is_feasible = true
status = "optimal"
dual_gap = 0.0005636029142312982
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.9089979861849904
(criterion, corr) = ("A", false)
(m, n, seed) = (120, 12, 2)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 5.589108617957896
------------------------------------------------------------------------------------
          1|          1|          3| 1.88424e+00 5.58911e+00 3.7e+00 2.0e+00| 3.2e-02 3.2e-02|  13
      10000|      10080|      20001| 1.94333e+00 5.58911e+00 3.6e+00 1.9e+00| 2.7e+01 1.0e-03|   3
      20000|      20830|      40001| 1.94952e+00 5.58911e+00 3.6e+00 1.9e+00| 4.5e+01 2.0e-03|   3
      30000|      21140|      60001| 1.95314e+00 5.58911e+00 3.6e+00 1.9e+00| 6.2e+01 2.0e-03|   3
      40000|      61776|      80001| 1.95576e+00 5.58911e+00 3.6e+00 1.9e+00| 8.0e+01 3.0e-03|   3
      50000|      37806|     100001| 1.95783e+00 5.58911e+00 3.6e+00 1.9e+00| 9.8e+01 2.0e-03|   3
      60000|      88348|     120001| 1.95947e+00 5.58911e+00 3.6e+00 1.9e+00| 1.2e+02 4.0e-03|   3
      70000|      64498|     140001| 1.96092e+00 5.58911e+00 3.6e+00 1.9e+00| 1.3e+02 1.0e-03|   3
      80000|      56476|     160001| 1.96217e+00 5.58911e+00 3.6e+00 1.8e+00| 1.5e+02 2.0e-03|   3
      90000|      92304|     180001| 1.96329e+00 5.58911e+00 3.6e+00 1.8e+00| 1.8e+02 2.0e-03|   3
     100000|     117594|     200001| 1.96427e+00 5.58911e+00 3.6e+00 1.8e+00| 2.0e+02 3.0e-03|   3
     110000|     176812|     220001| 1.96518e+00 5.58911e+00 3.6e+00 1.8e+00| 2.2e+02 1.0e-03|   3
     120000|     179624|     240001| 1.96601e+00 5.58911e+00 3.6e+00 1.8e+00| 2.4e+02 2.0e-03|   3
     130000|     134602|     260001| 1.96675e+00 5.58911e+00 3.6e+00 1.8e+00| 2.6e+02 1.0e-03|   3
     140000|     155052|     280001| 1.96747e+00 5.58911e+00 3.6e+00 1.8e+00| 2.8e+02 3.0e-03|   3
     150000|     151882|     300001| 1.96812e+00 5.58911e+00 3.6e+00 1.8e+00| 3.1e+02 2.0e-03|   3
     160000|     244648|     320001| 1.96873e+00 5.58911e+00 3.6e+00 1.8e+00| 3.3e+02 2.0e-03|   2
     170000|     232136|     340001| 1.96931e+00 5.58911e+00 3.6e+00 1.8e+00| 3.5e+02 1.0e-03|   3
     180000|     185906|     360001| 1.96986e+00 5.58911e+00 3.6e+00 1.8e+00| 3.7e+02 3.0e-03|   3
     190000|     139280|     380001| 1.97039e+00 5.58911e+00 3.6e+00 1.8e+00| 4.0e+02 1.0e-03|   3
     200000|     192190|     400001| 1.97088e+00 5.58911e+00 3.6e+00 1.8e+00| 4.2e+02 3.0e-03|   3
     210000|     246618|     420001| 1.97135e+00 5.58911e+00 3.6e+00 1.8e+00| 4.5e+02 3.0e-03|   3
     220000|     316520|     440001| 1.97179e+00 5.58911e+00 3.6e+00 1.8e+00| 4.7e+02 2.0e-03|   3
     230000|     273192|     460001| 1.97222e+00 5.58911e+00 3.6e+00 1.8e+00| 4.9e+02 2.0e-03|   3
     240000|     217254|     480001| 1.97264e+00 5.58911e+00 3.6e+00 1.8e+00| 5.2e+02 1.0e-03|   2
     250000|     184382|     500001| 1.97303e+00 5.58911e+00 3.6e+00 1.8e+00| 5.4e+02 2.0e-03|   3
     260000|     277314|     520001| 1.97341e+00 5.58911e+00 3.6e+00 1.8e+00| 5.6e+02 2.0e-03|   3
     270000|     248524|     540001| 1.97379e+00 5.58911e+00 3.6e+00 1.8e+00| 5.9e+02 3.0e-03|   3
     280000|     329338|     560001| 1.97415e+00 5.58911e+00 3.6e+00 1.8e+00| 6.1e+02 3.0e-03|   3
     290000|     404512|     580001| 1.97448e+00 5.58911e+00 3.6e+00 1.8e+00| 6.4e+02 2.0e-03|   2
     300000|     414288|     600001| 1.97481e+00 5.58911e+00 3.6e+00 1.8e+00| 6.6e+02 3.0e-03|   3
     310000|     296158|     620001| 1.97513e+00 5.58911e+00 3.6e+00 1.8e+00| 6.9e+02 2.0e-03|   3
     320000|     366586|     640001| 1.97545e+00 5.58911e+00 3.6e+00 1.8e+00| 7.1e+02 3.0e-03|   3
     330000|     364630|     660001| 1.97574e+00 5.58911e+00 3.6e+00 1.8e+00| 7.3e+02 2.0e-03|   2
     340000|     339754|     680001| 1.97604e+00 5.58911e+00 3.6e+00 1.8e+00| 7.6e+02 2.0e-03|   3
     350000|     352686|     700001| 1.97632e+00 5.58911e+00 3.6e+00 1.8e+00| 7.8e+02 3.0e-03|   3
     360000|     415184|     720001| 1.97659e+00 5.58911e+00 3.6e+00 1.8e+00| 8.0e+02 2.0e-03|   3
     370000|     339398|     740001| 1.97686e+00 5.58911e+00 3.6e+00 1.8e+00| 8.3e+02 2.0e-03|   4
     380000|     507612|     760001| 1.97712e+00 5.58911e+00 3.6e+00 1.8e+00| 8.5e+02 3.0e-03|   3
     390000|     454766|     780001| 1.97739e+00 5.58911e+00 3.6e+00 1.8e+00| 8.8e+02 3.0e-03|   3
     400000|     541380|     800001| 1.97764e+00 5.58911e+00 3.6e+00 1.8e+00| 9.0e+02 3.0e-03|   3
     410000|     566322|     820001| 1.97788e+00 5.58911e+00 3.6e+00 1.8e+00| 9.3e+02 3.0e-03|   3
     420000|     488102|     840001| 1.97812e+00 5.58911e+00 3.6e+00 1.8e+00| 9.5e+02 2.0e-03|   3
     430000|     445310|     860001| 1.97836e+00 5.58911e+00 3.6e+00 1.8e+00| 9.7e+02 2.0e-03|   3
     440000|     495026|     880001| 1.97858e+00 5.58911e+00 3.6e+00 1.8e+00| 1.0e+03 2.0e-03|   3
     450000|     589832|     900001| 1.97881e+00 5.58911e+00 3.6e+00 1.8e+00| 1.0e+03 3.0e-03|   3
     460000|     723380|     920001| 1.97903e+00 5.58911e+00 3.6e+00 1.8e+00| 1.0e+03 2.0e-03|   3
     470000|     514982|     940001| 1.97924e+00 5.58911e+00 3.6e+00 1.8e+00| 1.1e+03 2.0e-03|   3
     480000|     563604|     960001| 1.97945e+00 5.58911e+00 3.6e+00 1.8e+00| 1.1e+03 2.0e-03|   3
     490000|     591144|     980001| 1.97965e+00 5.58911e+00 3.6e+00 1.8e+00| 1.1e+03 2.0e-03|   3
     500000|     602830|    1000001| 1.97985e+00 5.58911e+00 3.6e+00 1.8e+00| 1.1e+03 2.0e-03|   3
     510000|     579882|    1020001| 1.98004e+00 5.58911e+00 3.6e+00 1.8e+00| 1.2e+03 2.0e-03|   2
     520000|     556358|    1040001| 1.98023e+00 5.58911e+00 3.6e+00 1.8e+00| 1.2e+03 2.0e-03|   3
     530000|     492598|    1060001| 1.98042e+00 5.58911e+00 3.6e+00 1.8e+00| 1.2e+03 3.0e-03|   3
     540000|     745450|    1080001| 1.98061e+00 5.58911e+00 3.6e+00 1.8e+00| 1.2e+03 2.0e-03|   3
     550000|     788932|    1100001| 1.98079e+00 5.58911e+00 3.6e+00 1.8e+00| 1.3e+03 2.0e-03|   3
     560000|     608614|    1120001| 1.98097e+00 5.58911e+00 3.6e+00 1.8e+00| 1.3e+03 2.0e-03|   3
     570000|     781410|    1140001| 1.98114e+00 5.58911e+00 3.6e+00 1.8e+00| 1.3e+03 2.0e-03|   3
     580000|     631034|    1160001| 1.98131e+00 5.58911e+00 3.6e+00 1.8e+00| 1.4e+03 2.0e-03|   3
     590000|     708698|    1180001| 1.98148e+00 5.58911e+00 3.6e+00 1.8e+00| 1.4e+03 1.0e-03|   3
     600000|     616850|    1200001| 1.98165e+00 5.58911e+00 3.6e+00 1.8e+00| 1.4e+03 2.0e-03|   3
     610000|     514310|    1220001| 1.98181e+00 5.58911e+00 3.6e+00 1.8e+00| 1.5e+03 1.0e-03|   2
     620000|     567454|    1240001| 1.98198e+00 5.58911e+00 3.6e+00 1.8e+00| 1.5e+03 2.0e-03|   3
     630000|     866242|    1260001| 1.98214e+00 5.58911e+00 3.6e+00 1.8e+00| 1.5e+03 2.0e-03|   3
     640000|     883994|    1280001| 1.98230e+00 5.58911e+00 3.6e+00 1.8e+00| 1.6e+03 2.0e-03|   3
 [Integer solution found!]
     650000|     569338|    1282107| 1.98245e+00 1.98338e+00 9.3e-04 4.7e-04| 1.6e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     660000|     525254|    1282117| 1.98257e+00 1.98338e+00 8.1e-04 4.1e-04| 1.6e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     670000|     609068|    1282119| 1.98261e+00 1.98338e+00 7.7e-04 3.9e-04| 1.6e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     680000|     874984|    1282121| 1.98282e+00 1.98338e+00 5.6e-04 2.8e-04| 1.7e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     690000|     771466|    1282121| 1.98282e+00 1.98338e+00 5.6e-04 2.8e-04| 1.7e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     700000|     663962|    1282121| 1.98282e+00 1.98338e+00 5.6e-04 2.8e-04| 1.7e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     710000|    1033186|    1282121| 1.98282e+00 1.98338e+00 5.6e-04 2.8e-04| 1.7e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     713421|     841441|    1282121| 1.98282e+00 1.98338e+00 5.6e-04 2.8e-04| 1.7e+03 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 1708.965561054
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
solution = 1.9833846380880746
num_nodes = 1282121
stage = 0
branch_count = [330, 1866, 3263, 10042, 441, 7236, 17, 1373, 5517, 1211, 11, 47, 11183, 1912, 17231, 22171, 2915, 1635, 2, 3950, 11952, 292, 3765, 5538, 9, 3623, 10561, 0, 1, 0, 1295, 0, 6275, 387, 0, 24382, 2937, 1679, 22006, 12417, 28129, 3986, 9592, 26898, 1167, 8730, 0, 3011, 2773, 5490, 0, 770, 7188, 0, 5106, 31073, 5850, 4396, 12931, 5926, 6616, 1376, 182, 3, 3309, 0, 3464, 148, 0, 6321, 18335, 5274, 4796, 6758, 46, 4773, 13283, 1080, 4137, 19, 173, 818, 7796, 6042, 1119, 0, 6485, 995, 109, 527, 10711, 6067, 1927, 11339, 1649, 287, 2, 6951, 5044, 8929, 11313, 5025, 22625, 4534, 5651, 8040, 638, 12642, 4, 2396, 8945, 1092, 73, 584, 33, 2998, 3, 4946, 15876, 14264]
is_feasible = true
status = "optimal"
dual_gap = 0.0005646731772237512
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.9833846380880824
(criterion, corr) = ("A", false)
(m, n, seed) = (120, 12, 3)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 7.906651179988889
------------------------------------------------------------------------------------
          1|          1|          3| 1.81752e+00 7.90665e+00 6.1e+00 3.4e+00| 5.6e-02 5.6e-02|  17
      10000|      10990|      20001| 1.87741e+00 7.90665e+00 6.0e+00 3.2e+00| 2.4e+01 2.0e-03|   3
      20000|      24276|      40001| 1.88318e+00 7.90665e+00 6.0e+00 3.2e+00| 4.7e+01 2.0e-03|   3
      30000|      30630|      60001| 1.88657e+00 7.90665e+00 6.0e+00 3.2e+00| 6.9e+01 2.0e-03|   3
      40000|      48472|      80001| 1.88906e+00 7.90665e+00 6.0e+00 3.2e+00| 8.7e+01 1.0e-03|   3
      50000|      50438|     100001| 1.89100e+00 7.90665e+00 6.0e+00 3.2e+00| 1.0e+02 3.0e-03|   3
      60000|      71322|     120001| 1.89261e+00 7.90665e+00 6.0e+00 3.2e+00| 1.2e+02 2.0e-03|   3
      70000|      73742|     140001| 1.89396e+00 7.90665e+00 6.0e+00 3.2e+00| 1.4e+02 2.0e-03|   2
      80000|      68914|     160001| 1.89514e+00 7.90665e+00 6.0e+00 3.2e+00| 1.6e+02 1.0e-03|   3
      90000|     110776|     180001| 1.89619e+00 7.90665e+00 6.0e+00 3.2e+00| 1.8e+02 5.0e-03|   3
     100000|     106310|     200001| 1.89712e+00 7.90665e+00 6.0e+00 3.2e+00| 2.0e+02 2.0e-03|   3
     110000|     111126|     220001| 1.89798e+00 7.90665e+00 6.0e+00 3.2e+00| 2.2e+02 3.0e-03|   3
     120000|     114030|     240001| 1.89877e+00 7.90665e+00 6.0e+00 3.2e+00| 2.4e+02 2.0e-03|   3
     130000|     175198|     260001| 1.89947e+00 7.90665e+00 6.0e+00 3.2e+00| 2.6e+02 2.0e-03|   3
     140000|     165272|     280001| 1.90013e+00 7.90665e+00 6.0e+00 3.2e+00| 2.9e+02 4.0e-03|   3
     150000|     179466|     300001| 1.90076e+00 7.90665e+00 6.0e+00 3.2e+00| 3.1e+02 2.0e-03|   3
     160000|     121844|     320001| 1.90134e+00 7.90665e+00 6.0e+00 3.2e+00| 3.3e+02 3.0e-03|   3
     170000|     166316|     340001| 1.90190e+00 7.90665e+00 6.0e+00 3.2e+00| 3.5e+02 2.0e-03|   2
     180000|     185522|     360001| 1.90243e+00 7.90665e+00 6.0e+00 3.2e+00| 3.8e+02 4.0e-03|   3
     190000|     185474|     380001| 1.90293e+00 7.90665e+00 6.0e+00 3.2e+00| 4.0e+02 2.0e-03|   3
     200000|     232878|     400001| 1.90339e+00 7.90665e+00 6.0e+00 3.2e+00| 4.2e+02 2.0e-03|   3
     210000|     157896|     420001| 1.90385e+00 7.90665e+00 6.0e+00 3.2e+00| 4.5e+02 2.0e-03|   3
     220000|     144988|     440001| 1.90427e+00 7.90665e+00 6.0e+00 3.2e+00| 4.7e+02 2.0e-03|   3
     230000|     332284|     460001| 1.90467e+00 7.90665e+00 6.0e+00 3.2e+00| 4.9e+02 3.0e-03|   2
     240000|     254220|     480001| 1.90507e+00 7.90665e+00 6.0e+00 3.2e+00| 5.2e+02 2.0e-03|   3
     250000|     302840|     500001| 1.90545e+00 7.90665e+00 6.0e+00 3.1e+00| 5.4e+02 2.0e-03|   3
     260000|     248762|     520001| 1.90580e+00 7.90665e+00 6.0e+00 3.1e+00| 5.7e+02 2.0e-03|   3
     270000|     290088|     540001| 1.90614e+00 7.90665e+00 6.0e+00 3.1e+00| 5.9e+02 3.0e-03|   3
     280000|     364064|     560001| 1.90647e+00 7.90665e+00 6.0e+00 3.1e+00| 6.1e+02 2.0e-03|   3
     290000|     195528|     580001| 1.90680e+00 7.90665e+00 6.0e+00 3.1e+00| 6.3e+02 3.0e-03|   3
     300000|     309394|     600001| 1.90711e+00 7.90665e+00 6.0e+00 3.1e+00| 6.6e+02 2.0e-03|   3
     310000|     326568|     620001| 1.90742e+00 7.90665e+00 6.0e+00 3.1e+00| 6.8e+02 4.0e-03|   3
     320000|     323492|     640001| 1.90771e+00 7.90665e+00 6.0e+00 3.1e+00| 7.1e+02 3.0e-03|   3
     330000|     466516|     660001| 1.90800e+00 7.90665e+00 6.0e+00 3.1e+00| 7.3e+02 3.0e-03|   3
     340000|     282348|     680001| 1.90828e+00 7.90665e+00 6.0e+00 3.1e+00| 7.6e+02 2.0e-03|   3
     350000|     352934|     700001| 1.90855e+00 7.90665e+00 6.0e+00 3.1e+00| 7.8e+02 1.0e-03|   2
     360000|     458266|     720001| 1.90882e+00 7.90665e+00 6.0e+00 3.1e+00| 8.0e+02 2.0e-03|   3
     370000|     184620|     740001| 1.90907e+00 7.90665e+00 6.0e+00 3.1e+00| 8.3e+02 2.0e-03|   4
     380000|     145568|     760001| 1.90933e+00 7.90665e+00 6.0e+00 3.1e+00| 8.5e+02 2.0e-03|   3
     390000|     344002|     780001| 1.90957e+00 7.90665e+00 6.0e+00 3.1e+00| 8.8e+02 3.0e-03|   3
     400000|     480850|     800001| 1.90982e+00 7.90665e+00 6.0e+00 3.1e+00| 9.0e+02 1.0e-03|   3
     410000|     618484|     820001| 1.91005e+00 7.90665e+00 6.0e+00 3.1e+00| 9.2e+02 1.0e-03|   2
     420000|     477678|     840001| 1.91027e+00 7.90665e+00 6.0e+00 3.1e+00| 9.5e+02 2.0e-03|   3
     430000|     472164|     860001| 1.91049e+00 7.90665e+00 6.0e+00 3.1e+00| 9.7e+02 2.0e-03|   3
     440000|     442908|     880001| 1.91070e+00 7.90665e+00 6.0e+00 3.1e+00| 9.9e+02 1.0e-03|   3
     450000|     428142|     900001| 1.91092e+00 7.90665e+00 6.0e+00 3.1e+00| 1.0e+03 2.0e-03|   3
     460000|     561294|     920001| 1.91113e+00 7.90665e+00 6.0e+00 3.1e+00| 1.0e+03 2.0e-03|   3
     470000|     540330|     940001| 1.91133e+00 7.90665e+00 6.0e+00 3.1e+00| 1.1e+03 2.0e-03|   3
     480000|     427164|     960001| 1.91152e+00 7.90665e+00 6.0e+00 3.1e+00| 1.1e+03 3.0e-03|   3
     490000|     476428|     980001| 1.91172e+00 7.90665e+00 6.0e+00 3.1e+00| 1.1e+03 3.0e-03|   3
     500000|     525040|    1000001| 1.91191e+00 7.90665e+00 6.0e+00 3.1e+00| 1.1e+03 3.0e-03|   3
     510000|     557208|    1020001| 1.91209e+00 7.90665e+00 6.0e+00 3.1e+00| 1.2e+03 2.0e-03|   3
 [Integer solution found!]
     520000|     457906|    1039983| 1.91227e+00 1.93834e+00 2.6e-02 1.4e-02| 1.2e+03 3.0e-03|   3
     530000|     517614|    1059963| 1.91245e+00 1.93834e+00 2.6e-02 1.4e-02| 1.2e+03 1.0e-03|   3
     540000|     847304|    1079951| 1.91263e+00 1.93834e+00 2.6e-02 1.3e-02| 1.2e+03 2.0e-03|   3
     550000|     682416|    1099933| 1.91280e+00 1.93834e+00 2.6e-02 1.3e-02| 1.3e+03 2.0e-03|   3
     560000|     597062|    1119913| 1.91297e+00 1.93834e+00 2.5e-02 1.3e-02| 1.3e+03 1.0e-03|   3
 [Integer solution found!]
     570000|     534530|    1139883| 1.91314e+00 1.93834e+00 2.5e-02 1.3e-02| 1.3e+03 2.0e-03|   3
     580000|     810508|    1159869| 1.91330e+00 1.93834e+00 2.5e-02 1.3e-02| 1.4e+03 3.0e-03|   4
     590000|     620866|    1179843| 1.91347e+00 1.93834e+00 2.5e-02 1.3e-02| 1.4e+03 2.0e-03|   3
     600000|     644048|    1199817| 1.91362e+00 1.93834e+00 2.5e-02 1.3e-02| 1.4e+03 3.0e-03|   3
     610000|     664628|    1219785| 1.91378e+00 1.93834e+00 2.5e-02 1.3e-02| 1.5e+03 2.0e-03|   3
     620000|     726542|    1239763| 1.91394e+00 1.93834e+00 2.4e-02 1.3e-02| 1.5e+03 1.0e-03|   3
     630000|     573870|    1259735| 1.91409e+00 1.93834e+00 2.4e-02 1.3e-02| 1.5e+03 1.0e-03|   3
     640000|     677248|    1279701| 1.91424e+00 1.93834e+00 2.4e-02 1.3e-02| 1.6e+03 2.0e-03|   2
     650000|     989148|    1299663| 1.91439e+00 1.93834e+00 2.4e-02 1.3e-02| 1.6e+03 2.0e-03|   3
 [Integer solution found!]
     660000|     689194|    1308467| 1.91454e+00 1.91819e+00 3.7e-03 1.9e-03| 1.6e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     670000|     673480|    1309361| 1.91468e+00 1.91819e+00 3.5e-03 1.8e-03| 1.7e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     680000|     735014|    1310231| 1.91483e+00 1.91819e+00 3.4e-03 1.8e-03| 1.7e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     690000|     829554|    1310873| 1.91497e+00 1.91819e+00 3.2e-03 1.7e-03| 1.7e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     700000|     751458|    1311365| 1.91510e+00 1.91819e+00 3.1e-03 1.6e-03| 1.7e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     710000|     821398|    1311753| 1.91524e+00 1.91819e+00 3.0e-03 1.5e-03| 1.7e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     720000|     550964|    1312073| 1.91537e+00 1.91819e+00 2.8e-03 1.5e-03| 1.8e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     730000|     622252|    1312291| 1.91551e+00 1.91819e+00 2.7e-03 1.4e-03| 1.8e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     740000|    1011382|    1312469| 1.91564e+00 1.91819e+00 2.6e-03 1.3e-03| 1.8e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     750000|     989560|    1312625| 1.91576e+00 1.91819e+00 2.4e-03 1.3e-03| 1.8e+03 3.0e-03|   4
 [Node cut because it is worse than the incumbent!]
     760000|     902926|    1312767| 1.91589e+00 1.91819e+00 2.3e-03 1.2e-03| 1.9e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     770000|    1097360|    1312845| 1.91602e+00 1.91819e+00 2.2e-03 1.1e-03| 1.9e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     780000|     479572|    1312909| 1.91615e+00 1.91819e+00 2.0e-03 1.1e-03| 1.9e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     790000|     902776|    1312961| 1.91627e+00 1.91819e+00 1.9e-03 1.0e-03| 1.9e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     800000|     763246|    1312987| 1.91638e+00 1.91819e+00 1.8e-03 9.4e-04| 1.9e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     810000|     728540|    1313011| 1.91651e+00 1.91819e+00 1.7e-03 8.8e-04| 2.0e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     820000|     976902|    1313029| 1.91661e+00 1.91819e+00 1.6e-03 8.2e-04| 2.0e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     830000|     730854|    1313031| 1.91665e+00 1.91819e+00 1.5e-03 8.1e-04| 2.0e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     840000|     684622|    1313033| 1.91678e+00 1.91819e+00 1.4e-03 7.4e-04| 2.0e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     850000|     777236|    1313039| 1.91696e+00 1.91819e+00 1.2e-03 6.4e-04| 2.1e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     860000|     749494|    1313039| 1.91696e+00 1.91819e+00 1.2e-03 6.4e-04| 2.1e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     870000|    1119980|    1313041| 1.91719e+00 1.91819e+00 1.0e-03 5.2e-04| 2.1e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     880000|    1102690|    1313041| 1.91719e+00 1.91819e+00 1.0e-03 5.2e-04| 2.1e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     890000|     946590|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.1e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     900000|    1151184|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.2e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     910000|    1072362|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.2e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     920000|    1141722|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.2e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     930000|    1152594|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.2e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     940000|     957672|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.3e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     950000|    1234350|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.3e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     960000|    1079260|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.3e+03 2.0e-03|   2
 [Node cut because it is worse than the incumbent!]
     965203|    1071867|    1313043| 1.91735e+00 1.91819e+00 8.4e-04 4.4e-04| 2.3e+03 2.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 2306.602589691
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
solution = 1.918191769522011
num_nodes = 1313043
stage = 0
branch_count = [11976, 685, 3824, 178, 38, 684, 2669, 2, 14628, 7, 0, 88, 20798, 699, 5625, 22512, 2625, 0, 3529, 2113, 7104, 468, 1838, 7389, 251, 864, 15599, 12421, 6035, 6, 660, 408, 222, 8230, 10979, 13122, 110, 8587, 12160, 655, 1242, 11084, 728, 22836, 17453, 2676, 7672, 16294, 145, 45, 0, 5492, 11323, 28, 1206, 298, 29, 9949, 13429, 0, 86, 0, 0, 1703, 204, 5174, 1, 87, 8521, 546, 10836, 10421, 5269, 0, 0, 345, 0, 66, 26667, 6518, 68, 10938, 9598, 12910, 9228, 15464, 6, 13093, 6949, 21482, 416, 5301, 11293, 12378, 2845, 0, 16151, 1866, 12410, 10613, 8410, 1236, 150, 980, 3106, 462, 5076, 8992, 8889, 133, 0, 272, 0, 6765, 2387, 10621, 9179, 983, 12453, 5257]
is_feasible = true
status = "optimal"
dual_gap = 0.0008381020838919007
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.918191769522018
(criterion, corr) = ("A", false)
(m, n, seed) = (120, 12, 4)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 6.066930343586926
------------------------------------------------------------------------------------
          1|          1|          3| 1.88493e+00 6.06693e+00 4.2e+00 2.2e+00| 3.2e-02 3.2e-02|  14
      10000|       8852|      20001| 1.94862e+00 6.06693e+00 4.1e+00 2.1e+00| 2.8e+01 3.0e-03|   3
      20000|      27010|      40001| 1.95484e+00 6.06693e+00 4.1e+00 2.1e+00| 5.5e+01 3.0e-03|   3
      30000|      30494|      60001| 1.95850e+00 6.06693e+00 4.1e+00 2.1e+00| 8.1e+01 5.0e-03|   3
      40000|      43590|      80001| 1.96106e+00 6.06693e+00 4.1e+00 2.1e+00| 1.1e+02 1.0e-03|   3
      50000|      51854|     100001| 1.96317e+00 6.06693e+00 4.1e+00 2.1e+00| 1.2e+02 1.0e-03|   3
      60000|      64454|     120001| 1.96479e+00 6.06693e+00 4.1e+00 2.1e+00| 1.4e+02 2.0e-03|   3
      70000|      61170|     140001| 1.96622e+00 6.06693e+00 4.1e+00 2.1e+00| 1.6e+02 2.0e-03|   3
      80000|      89536|     160001| 1.96747e+00 6.06693e+00 4.1e+00 2.1e+00| 1.8e+02 1.0e-03|   3
      90000|     104784|     180001| 1.96855e+00 6.06693e+00 4.1e+00 2.1e+00| 2.0e+02 2.0e-03|   3
     100000|      77252|     200001| 1.96954e+00 6.06693e+00 4.1e+00 2.1e+00| 2.2e+02 3.0e-03|   3
     110000|      84246|     220001| 1.97042e+00 6.06693e+00 4.1e+00 2.1e+00| 2.4e+02 2.0e-03|   3
     120000|     142658|     240001| 1.97125e+00 6.06693e+00 4.1e+00 2.1e+00| 2.6e+02 3.0e-03|   2
     130000|     131570|     260001| 1.97199e+00 6.06693e+00 4.1e+00 2.1e+00| 2.8e+02 2.0e-03|   3
     140000|     148560|     280001| 1.97270e+00 6.06693e+00 4.1e+00 2.1e+00| 3.0e+02 3.0e-03|   3
     150000|     166116|     300001| 1.97335e+00 6.06693e+00 4.1e+00 2.1e+00| 3.2e+02 1.0e-03|   3
     160000|     179386|     320001| 1.97396e+00 6.06693e+00 4.1e+00 2.1e+00| 3.4e+02 2.0e-03|   3
     170000|     179362|     340001| 1.97452e+00 6.06693e+00 4.1e+00 2.1e+00| 3.7e+02 2.0e-03|   3
     180000|     197806|     360001| 1.97505e+00 6.06693e+00 4.1e+00 2.1e+00| 3.9e+02 1.0e-03|   3
     190000|     186742|     380001| 1.97557e+00 6.06693e+00 4.1e+00 2.1e+00| 4.1e+02 3.0e-03|   3
     200000|     266828|     400001| 1.97605e+00 6.06693e+00 4.1e+00 2.1e+00| 4.4e+02 3.0e-03|   3
     210000|     245380|     420001| 1.97652e+00 6.06693e+00 4.1e+00 2.1e+00| 4.6e+02 2.0e-03|   3
     220000|     189974|     440001| 1.97696e+00 6.06693e+00 4.1e+00 2.1e+00| 4.9e+02 3.0e-03|   3
     230000|     186864|     460001| 1.97739e+00 6.06693e+00 4.1e+00 2.1e+00| 5.1e+02 2.0e-03|   3
     240000|     254802|     480001| 1.97779e+00 6.06693e+00 4.1e+00 2.1e+00| 5.3e+02 2.0e-03|   3
     250000|     290994|     500001| 1.97819e+00 6.06693e+00 4.1e+00 2.1e+00| 5.6e+02 1.0e-03|   3
     260000|     184836|     520001| 1.97856e+00 6.06693e+00 4.1e+00 2.1e+00| 5.8e+02 2.0e-03|   3
     270000|     348890|     540001| 1.97893e+00 6.06693e+00 4.1e+00 2.1e+00| 6.1e+02 2.0e-03|   3
     280000|     303796|     560001| 1.97928e+00 6.06693e+00 4.1e+00 2.1e+00| 6.3e+02 2.0e-03|   3
     290000|     301382|     580001| 1.97963e+00 6.06693e+00 4.1e+00 2.1e+00| 6.6e+02 3.0e-03|   3
     300000|     237462|     600001| 1.97995e+00 6.06693e+00 4.1e+00 2.1e+00| 6.8e+02 3.0e-03|   3
     310000|     230908|     620001| 1.98026e+00 6.06693e+00 4.1e+00 2.1e+00| 7.1e+02 3.0e-03|   3
     320000|     362584|     640001| 1.98057e+00 6.06693e+00 4.1e+00 2.1e+00| 7.3e+02 2.0e-03|   3
     330000|     401130|     660001| 1.98087e+00 6.06693e+00 4.1e+00 2.1e+00| 7.6e+02 2.0e-03|   3
     340000|     329660|     680001| 1.98115e+00 6.06693e+00 4.1e+00 2.1e+00| 7.8e+02 2.0e-03|   3
     350000|     286814|     700001| 1.98142e+00 6.06693e+00 4.1e+00 2.1e+00| 8.0e+02 2.0e-03|   3
     360000|     391760|     720001| 1.98170e+00 6.06693e+00 4.1e+00 2.1e+00| 8.3e+02 2.0e-03|   3
     370000|     394552|     740001| 1.98196e+00 6.06693e+00 4.1e+00 2.1e+00| 8.5e+02 2.0e-03|   3
     380000|     496776|     760001| 1.98221e+00 6.06693e+00 4.1e+00 2.1e+00| 8.8e+02 1.0e-03|   2
 [Integer solution found!]
     390000|     434234|     779999| 1.98247e+00 2.01956e+00 3.7e-02 1.9e-02| 9.0e+02 3.0e-03|   3
     400000|     343620|     799999| 1.98271e+00 2.01956e+00 3.7e-02 1.9e-02| 9.3e+02 6.0e-03|   3
     410000|     502812|     819997| 1.98295e+00 2.01956e+00 3.7e-02 1.8e-02| 9.5e+02 3.0e-03|   3
     420000|     537324|     839997| 1.98318e+00 2.01956e+00 3.6e-02 1.8e-02| 9.8e+02 4.0e-03|   3
     430000|     405328|     859995| 1.98340e+00 2.01956e+00 3.6e-02 1.8e-02| 1.0e+03 2.0e-03|   3
     440000|     522582|     879995| 1.98363e+00 2.01956e+00 3.6e-02 1.8e-02| 1.0e+03 3.0e-03|   3
     450000|     601532|     899993| 1.98385e+00 2.01956e+00 3.6e-02 1.8e-02| 1.0e+03 3.0e-03|   3
     460000|     427172|     919991| 1.98406e+00 2.01956e+00 3.5e-02 1.8e-02| 1.1e+03 3.0e-03|   3
 [Integer solution found!]
     470000|     624800|     939987| 1.98428e+00 2.01956e+00 3.5e-02 1.8e-02| 1.1e+03 3.0e-03|   3
     480000|     452282|     959987| 1.98448e+00 2.01956e+00 3.5e-02 1.8e-02| 1.1e+03 3.0e-03|   3
     490000|     478980|     979987| 1.98469e+00 2.01956e+00 3.5e-02 1.8e-02| 1.1e+03 2.0e-03|   3
     500000|     474204|     999987| 1.98488e+00 2.01956e+00 3.5e-02 1.7e-02| 1.2e+03 2.0e-03|   3
     510000|     609504|    1019987| 1.98508e+00 2.01956e+00 3.4e-02 1.7e-02| 1.2e+03 2.0e-03|   3
     520000|     509000|    1039987| 1.98527e+00 2.01956e+00 3.4e-02 1.7e-02| 1.2e+03 2.0e-03|   3
     530000|     516246|    1059983| 1.98546e+00 2.01956e+00 3.4e-02 1.7e-02| 1.2e+03 3.0e-03|   3
     540000|     502326|    1079983| 1.98564e+00 2.01956e+00 3.4e-02 1.7e-02| 1.3e+03 3.0e-03|   3
 [Integer solution found!]
     550000|     585226|    1099981| 1.98583e+00 2.01956e+00 3.4e-02 1.7e-02| 1.3e+03 2.0e-03|   3
     560000|     637320|    1119975| 1.98600e+00 2.01956e+00 3.4e-02 1.7e-02| 1.3e+03 3.0e-03|   3
     570000|     838308|    1139973| 1.98617e+00 2.01956e+00 3.3e-02 1.7e-02| 1.4e+03 3.0e-03|   3
 [Integer solution found!]
     580000|     678344|    1159971| 1.98634e+00 2.01874e+00 3.2e-02 1.6e-02| 1.4e+03 2.0e-03|   3
     590000|     712836|    1179965| 1.98650e+00 2.01874e+00 3.2e-02 1.6e-02| 1.4e+03 3.0e-03|   3
     600000|     567096|    1199965| 1.98667e+00 2.01874e+00 3.2e-02 1.6e-02| 1.5e+03 2.0e-03|   3
 [Integer solution found!]
     610000|     914040|    1212649| 1.98683e+00 1.99252e+00 5.7e-03 2.9e-03| 1.5e+03 2.4e-02|   4
 [Node cut because it is worse than the incumbent!]
     620000|     586080|    1218373| 1.98699e+00 1.99252e+00 5.5e-03 2.8e-03| 1.5e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     630000|     472136|    1223303| 1.98715e+00 1.99252e+00 5.4e-03 2.7e-03| 1.6e+03 3.0e-03|   2
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     640000|     771570|    1227697| 1.98730e+00 1.99252e+00 5.2e-03 2.6e-03| 1.6e+03 2.0e-03|   3
 [Integer solution found!]
     650000|     628202|    1231717| 1.98746e+00 1.99252e+00 5.1e-03 2.5e-03| 1.6e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     660000|     737212|    1235303| 1.98760e+00 1.99252e+00 4.9e-03 2.5e-03| 1.6e+03 2.0e-03|   3
     670000|     905548|    1238501| 1.98775e+00 1.99252e+00 4.8e-03 2.4e-03| 1.7e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     680000|     743942|    1241359| 1.98789e+00 1.99252e+00 4.6e-03 2.3e-03| 1.7e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     690000|     828960|    1243779| 1.98804e+00 1.99252e+00 4.5e-03 2.3e-03| 1.7e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     700000|     504282|    1245793| 1.98818e+00 1.99252e+00 4.3e-03 2.2e-03| 1.7e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     710000|     688260|    1247633| 1.98832e+00 1.99252e+00 4.2e-03 2.1e-03| 1.7e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     720000|     728856|    1249173| 1.98845e+00 1.99252e+00 4.1e-03 2.0e-03| 1.8e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     730000|     839876|    1250587| 1.98859e+00 1.99252e+00 3.9e-03 2.0e-03| 1.8e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     740000|    1037280|    1251751| 1.98872e+00 1.99252e+00 3.8e-03 1.9e-03| 1.8e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     750000|     828898|    1252671| 1.98885e+00 1.99252e+00 3.7e-03 1.8e-03| 1.8e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     760000|     590518|    1253479| 1.98898e+00 1.99252e+00 3.5e-03 1.8e-03| 1.9e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     770000|     957830|    1254095| 1.98911e+00 1.99252e+00 3.4e-03 1.7e-03| 1.9e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     780000|     855822|    1254585| 1.98924e+00 1.99252e+00 3.3e-03 1.6e-03| 1.9e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     790000|     666144|    1255023| 1.98936e+00 1.99252e+00 3.2e-03 1.6e-03| 1.9e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     800000|    1117996|    1255375| 1.98949e+00 1.99252e+00 3.0e-03 1.5e-03| 2.0e+03 2.0e-03|   3
 [Integer solution found!]
     810000|     535036|    1255687| 1.98961e+00 1.99252e+00 2.9e-03 1.5e-03| 2.0e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     820000|     886632|    1255943| 1.98973e+00 1.99252e+00 2.8e-03 1.4e-03| 2.0e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     830000|     889160|    1256155| 1.98985e+00 1.99252e+00 2.7e-03 1.3e-03| 2.0e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     840000|     680440|    1256323| 1.98996e+00 1.99252e+00 2.6e-03 1.3e-03| 2.0e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     850000|    1055442|    1256435| 1.99008e+00 1.99252e+00 2.4e-03 1.2e-03| 2.1e+03 4.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     860000|     808882|    1256551| 1.99020e+00 1.99252e+00 2.3e-03 1.2e-03| 2.1e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     870000|     512778|    1256637| 1.99031e+00 1.99252e+00 2.2e-03 1.1e-03| 2.1e+03 2.0e-03|   4
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     880000|     763324|    1256681| 1.99042e+00 1.99252e+00 2.1e-03 1.1e-03| 2.1e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     890000|     938644|    1256727| 1.99053e+00 1.99252e+00 2.0e-03 1.0e-03| 2.2e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     900000|    1171384|    1256757| 1.99065e+00 1.99252e+00 1.9e-03 9.4e-04| 2.2e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     910000|    1098398|    1256791| 1.99075e+00 1.99252e+00 1.8e-03 8.9e-04| 2.2e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     920000|     934350|    1256815| 1.99085e+00 1.99252e+00 1.7e-03 8.4e-04| 2.2e+03 4.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     930000|     835962|    1256835| 1.99096e+00 1.99252e+00 1.6e-03 7.8e-04| 2.3e+03 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     940000|    1120364|    1256841| 1.99101e+00 1.99252e+00 1.5e-03 7.6e-04| 2.3e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     950000|    1097618|    1256847| 1.99113e+00 1.99252e+00 1.4e-03 6.9e-04| 2.3e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     960000|     946844|    1256849| 1.99126e+00 1.99252e+00 1.3e-03 6.3e-04| 2.3e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     970000|    1123750|    1256857| 1.99137e+00 1.99252e+00 1.1e-03 5.7e-04| 2.3e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     980000|    1228636|    1256863| 1.99150e+00 1.99252e+00 1.0e-03 5.1e-04| 2.4e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     990000|    1059736|    1256871| 1.99156e+00 1.99252e+00 9.5e-04 4.8e-04| 2.4e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
    1000000|    1160878|    1256871| 1.99156e+00 1.99252e+00 9.5e-04 4.8e-04| 2.4e+03 3.0e-03|   2
 [Node cut because it is worse than the incumbent!]
    1010000|    1206290|    1256873| 1.99180e+00 1.99252e+00 7.2e-04 3.6e-04| 2.4e+03 4.0e-03|   3
 [Node cut because it is worse than the incumbent!]
    1020000|    1217870|    1256873| 1.99180e+00 1.99252e+00 7.2e-04 3.6e-04| 2.5e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
    1030000|    1119214|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.5e+03 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
    1040000|    1254044|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.5e+03 3.0e-03|   4
 [Node cut because it is worse than the incumbent!]
    1050000|     918456|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.5e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
    1060000|    1211984|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.5e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
    1070000|    1029738|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.6e+03 4.0e-03|   3
 [Node cut because it is worse than the incumbent!]
    1080000|    1244352|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.6e+03 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
    1085457|    1159555|    1256875| 1.99195e+00 1.99252e+00 5.7e-04 2.9e-04| 2.6e+03 2.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 2607.204104703
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0]
solution = 1.9925164610196267
num_nodes = 1256875
stage = 0
branch_count = [382, 6203, 4581, 3823, 2975, 11, 5432, 12, 0, 4431, 1191, 0, 4179, 15103, 1, 9398, 14360, 12390, 11162, 1, 4375, 0, 1491, 16516, 0, 815, 1020, 1725, 31, 2299, 8435, 4148, 7676, 266, 0, 11593, 9328, 3833, 12358, 6427, 646, 1406, 11632, 724, 9386, 9352, 66, 213, 1, 2278, 6051, 4736, 16, 250, 18, 884, 329, 14, 122, 11813, 9019, 3545, 273, 10802, 13408, 3239, 64, 339, 128, 14811, 1339, 4285, 19675, 19048, 440, 13972, 17686, 1026, 61, 15015, 927, 4901, 3338, 395, 4947, 2115, 11250, 8776, 734, 1, 2459, 13032, 963, 15829, 586, 458, 591, 167, 1475, 1192, 4544, 707, 16782, 18600, 3306, 214, 897, 0, 14276, 641, 14265, 25389, 4211, 13371, 7056, 2449, 50, 10934, 18077, 2449]
is_feasible = true
status = "optimal"
dual_gap = 0.0005702158801506041
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.9925164610196342
(criterion, corr) = ("A", false)
(m, n, seed) = (120, 12, 5)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 6.784421325619235
------------------------------------------------------------------------------------
          1|          1|          3| 1.79215e+00 6.78442e+00 5.0e+00 2.8e+00| 3.8e-02 3.8e-02|  15
      10000|      10842|      20001| 1.85388e+00 6.78442e+00 4.9e+00 2.7e+00| 2.4e+01 2.0e-03|   3
      20000|      24478|      40001| 1.86033e+00 6.78442e+00 4.9e+00 2.6e+00| 4.6e+01 3.0e-03|   3
      30000|      29754|      60001| 1.86416e+00 6.78442e+00 4.9e+00 2.6e+00| 6.6e+01 1.0e-03|   3
      40000|      43712|      80001| 1.86690e+00 6.78442e+00 4.9e+00 2.6e+00| 8.2e+01 1.0e-03|   3
      50000|      50866|     100001| 1.86905e+00 6.78442e+00 4.9e+00 2.6e+00| 9.7e+01 2.0e-03|   3
 [Integer solution found!]
      60000|      52032|     103765| 1.87081e+00 1.87266e+00 1.9e-03 9.9e-04| 1.1e+02 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
      70000|      79906|     103783| 1.87152e+00 1.87266e+00 1.1e-03 6.1e-04| 1.3e+02 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
      72529|      78307|     103783| 1.87152e+00 1.87266e+00 1.1e-03 6.1e-04| 1.3e+02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 130.007574727
sol_x = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = 1.87266187550006
num_nodes = 103783
stage = 0
branch_count = [218, 943, 201, 28, 7, 702, 1002, 1856, 499, 238, 1, 1073, 0, 0, 2330, 922, 1184, 1105, 1616, 5, 0, 837, 282, 1623, 1087, 1844, 1, 8, 0, 0, 26, 3, 0, 134, 1777, 189, 625, 253, 49, 775, 0, 0, 20, 23, 534, 695, 810, 671, 9, 52, 6, 25, 893, 1386, 0, 3, 1343, 0, 489, 495, 14, 0, 0, 11, 0, 0, 266, 136, 1997, 0, 2, 289, 0, 1029, 0, 448, 155, 0, 396, 48, 942, 694, 0, 0, 0, 38, 0, 1887, 1199, 421, 205, 1, 1174, 2, 659, 1151, 1479, 0, 0, 0, 7, 404, 0, 25, 1450, 1, 51, 714, 381, 0, 1088, 19, 217, 114, 32, 0, 9, 1293, 14, 532]
is_feasible = true
status = "optimal"
dual_gap = 0.001139726864725521
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = 1.8726618755000664
(criterion, corr) = ("A", true)
(m, n, seed) = (50, 5, 1)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.5370927041829702
------------------------------------------------------------------------------------
          1|          1|          3| -2.42839e+00 5.37093e-01 3.0e+00 5.5e+00| 7.0e-03 7.0e-03|  11
 [Integer solution found!]
         43|         27|         77| -2.36678e+00 -2.36392e+00 2.9e-03 1.2e-03| 3.0e-02 0.0e+00|   3
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.029928169
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0]
solution = -2.363920036965028
num_nodes = 77
stage = 0
branch_count = [1, 3, 0, 0, 3, 4, 0, 0, 6, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 5, 4, 0, 1, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0028576522574934593
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.363920036965028
(criterion, corr) = ("A", true)
(m, n, seed) = (50, 5, 2)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.5752485612017135
------------------------------------------------------------------------------------
          1|          1|          3| -2.41870e+00 -5.75249e-01 1.8e+00 3.2e+00| 1.9e-02 1.9e-02|   7
 [Integer solution found!]
         37|         67|         71| -2.37446e+00 -2.37421e+00 2.5e-04 1.1e-04| 5.5e-02 1.0e-03|   1
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.055042912
sol_x = [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
solution = -2.3742061276970445
num_nodes = 71
stage = 0
branch_count = [0, 0, 0, 0, 4, 0, 1, 0, 0, 4, 4, 0, 0, 0, 0, 4, 0, 0, 2, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 5, 3]
is_feasible = true
status = "optimal"
dual_gap = 0.00025415465237932366
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.3742061276970445
(criterion, corr) = ("A", true)
(m, n, seed) = (50, 5, 3)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.36629198728411044
------------------------------------------------------------------------------------
          1|          1|          3| -2.46121e+00 -3.66292e-01 2.1e+00 5.7e+00| 1.1e-02 1.1e-02|   8
 [Integer solution found!]
 [Integer solution found!]
         29|         53|         55| -2.41029e+00 -2.41029e+00 8.9e-15 3.7e-15| 2.0e-02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.020317019
sol_x = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.410293713173297
num_nodes = 55
stage = 1
branch_count = [1, 0, 0, 0, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 0, 4, 0, 1, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 4, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 8.881784197001252e-15
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.4102937131732975
(criterion, corr) = ("A", true)
(m, n, seed) = (50, 5, 4)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.6342386536943327
------------------------------------------------------------------------------------
          1|          1|          3| -2.55165e+00 1.63424e+00 4.2e+00 2.6e+00| 1.5e-02 1.5e-02|  11
 [Integer solution found!]
         55|         79|         89| -2.49085e+00 -2.48533e+00 5.5e-03 2.2e-03| 5.7e-02 1.0e-03|   1
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.057306397
sol_x = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
solution = -2.485329970339015
num_nodes = 89
stage = 0
branch_count = [1, 2, 0, 0, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 3, 1, 1, 0, 0, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 5, 6, 0, 0, 0, 1, 0, 0, 2, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.005517030951473156
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.485329970339015
(criterion, corr) = ("A", true)
(m, n, seed) = (50, 5, 5)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.9989625105154539
------------------------------------------------------------------------------------
          1|          1|          3| -2.83129e+00 9.98963e-01 3.8e+00 3.8e+00| 4.3e-02 4.3e-02|  12
 [Integer solution found!]
 [Integer solution found!]
         47|         77|         77| -2.77924e+00 -2.77613e+00 3.1e-03 1.1e-03| 5.8e-02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.057450095
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0]
solution = -2.7761316912963587
num_nodes = 77
stage = 0
branch_count = [1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 9, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 3, 0, 0, 0, 4, 2, 2, 0, 0, 3, 2, 0, 0, 0, 0, 1, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.003105432067625369
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.7761316912963587
(criterion, corr) = ("A", true)
(m, n, seed) = (60, 6, 1)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.425064098197223
------------------------------------------------------------------------------------
          1|          1|          3| -2.49233e+00 4.42506e+00 6.9e+00 2.8e+00| 9.0e-03 9.0e-03|  17
 [Integer solution found!]
         33|         29|         61| -2.45178e+00 -2.45070e+00 1.1e-03 4.4e-04| 2.6e-02 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.02626853
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]
solution = -2.450698043036565
num_nodes = 61
stage = 0
branch_count = [2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 4, 4, 0, 0, 0, 2, 1, 0, 0, 1, 2, 1]
is_feasible = true
status = "optimal"
dual_gap = 0.0010837662268086135
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.450698043036565
(criterion, corr) = ("A", true)
(m, n, seed) = (60, 6, 2)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.6567248602767262
------------------------------------------------------------------------------------
          1|          1|          3| -2.63548e+00 6.56725e-01 3.3e+00 5.0e+00| 1.9e-02 1.9e-02|  10
 [Integer solution found!]
 [Integer solution found!]
 [Integer solution found!]
        669|        363|       1135| -2.56057e+00 -2.55836e+00 2.2e-03 8.6e-04| 5.1e-01 1.9e-02|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.507643363
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0]
solution = -2.5583581535983773
num_nodes = 1135
stage = 0
branch_count = [0, 5, 0, 0, 0, 7, 0, 0, 34, 0, 0, 0, 0, 1, 0, 7, 3, 43, 0, 0, 6, 0, 2, 6, 32, 3, 3, 0, 20, 0, 0, 35, 30, 6, 1, 20, 3, 0, 0, 0, 35, 21, 0, 31, 18, 0, 0, 0, 24, 0, 64, 3, 0, 0, 34, 0, 32, 0, 26, 12]
is_feasible = true
status = "optimal"
dual_gap = 0.0022113447316347568
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.5583581535983773
(criterion, corr) = ("A", true)
(m, n, seed) = (60, 6, 3)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 2.032027256649584
------------------------------------------------------------------------------------
          1|          1|          3| -2.72092e+00 2.03203e+00 4.8e+00 2.3e+00| 9.0e-03 9.0e-03|  14
 [Integer solution found!]
         51|         91|        101| -2.66848e+00 -2.66836e+00 1.2e-04 4.5e-05| 3.2e-02 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.032158024
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0]
solution = -2.6683580946163725
num_nodes = 101
stage = 0
branch_count = [0, 0, 0, 3, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 3, 1, 0, 0, 2, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 5, 0, 1, 2, 0, 0, 9, 3, 0, 0, 0, 4, 0, 0, 0, 7, 1, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00011961346672650919
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.6683580946163725
(criterion, corr) = ("A", true)
(m, n, seed) = (60, 6, 4)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 2.0114437590886927
------------------------------------------------------------------------------------
          1|          1|          3| -2.72350e+00 2.01144e+00 4.7e+00 2.4e+00| 1.6e-02 1.6e-02|  13
 [Integer solution found!]
 [Integer solution found!]
 [Integer solution found!]
        431|        815|        843| -2.64378e+00 -2.64358e+00 2.0e-04 7.6e-05| 3.5e-01 2.0e-03|   0
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.345901642
sol_x = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.643581050357268
num_nodes = 843
stage = 0
branch_count = [0, 0, 0, 0, 1, 0, 15, 0, 23, 0, 0, 0, 35, 0, 0, 8, 4, 0, 0, 1, 35, 0, 0, 0, 18, 0, 0, 0, 7, 0, 0, 14, 17, 11, 16, 25, 0, 0, 5, 0, 8, 0, 0, 0, 15, 21, 24, 0, 0, 4, 13, 0, 16, 35, 13, 6, 0, 20, 0, 11]
is_feasible = true
status = "optimal"
dual_gap = 0.00019990057879848422
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.643581050357268
(criterion, corr) = ("A", true)
(m, n, seed) = (60, 6, 5)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.1863912050566372
------------------------------------------------------------------------------------
          1|          1|          3| -2.70580e+00 1.18639e+00 3.9e+00 3.3e+00| 2.6e-02 2.6e-02|  12
 [Integer solution found!]
        383|        695|        765| -2.65236e+00 -2.65236e+00 9.8e-15 3.7e-15| 3.2e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.322445491
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1]
solution = -2.652361775295024
num_nodes = 765
stage = 1
branch_count = [38, 0, 12, 1, 0, 0, 0, 13, 0, 27, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 6, 16, 0, 0, 14, 20, 0, 4, 0, 17, 7, 22, 0, 0, 8, 0, 0, 0, 1, 0, 0, 13, 0, 31, 27, 10, 2, 14, 1, 0, 0, 0, 0, 0, 22, 4, 0, 20]
is_feasible = true
status = "optimal"
dual_gap = 9.769962616701378e-15
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.652361775295024
(criterion, corr) = ("A", true)
(m, n, seed) = (80, 8, 1)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.491891364137666
------------------------------------------------------------------------------------
          1|          1|          3| -2.84474e+00 1.49189e+00 4.3e+00 2.9e+00| 2.7e-02 2.7e-02|  14
 [Integer solution found!]
        687|       1067|       1337| -2.78029e+00 -2.77985e+00 4.4e-04 1.6e-04| 6.0e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.600190703
sol_x = [0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
solution = -2.7798512276027147
num_nodes = 1337
stage = 0
branch_count = [0, 0, 0, 0, 24, 0, 0, 0, 1, 28, 2, 0, 0, 0, 1, 0, 30, 0, 0, 6, 21, 0, 10, 0, 20, 6, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 2, 0, 0, 15, 0, 0, 57, 0, 12, 52, 38, 5, 0, 8, 1, 42, 38, 0, 1, 24, 15, 0, 36, 4, 32, 10, 0, 0, 0, 0, 0, 58, 0, 5, 0, 18, 0, 0, 0, 0, 0, 0, 0, 21]
is_feasible = true
status = "optimal"
dual_gap = 0.0004397297564144864
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.7798512276027147
(criterion, corr) = ("A", true)
(m, n, seed) = (80, 8, 2)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.174080710879614
------------------------------------------------------------------------------------
          1|          1|          3| -2.44070e+00 1.17408e+00 3.6e+00 3.1e+00| 3.9e-02 3.9e-02|  12
 [Integer solution found!]
       1601|       1515|       3161| -2.36796e+00 -2.36783e+00 1.2e-04 5.2e-05| 1.4e+00 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 1.413970237
sol_x = [0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.3678340381092324
num_nodes = 3161
stage = 0
branch_count = [0, 51, 0, 36, 35, 96, 0, 11, 113, 0, 0, 0, 0, 0, 56, 19, 27, 93, 53, 37, 101, 6, 0, 0, 3, 0, 36, 0, 55, 0, 0, 0, 7, 0, 0, 33, 18, 0, 92, 0, 43, 43, 71, 22, 0, 83, 0, 6, 1, 0, 17, 0, 0, 39, 41, 5, 0, 7, 15, 15, 29, 0, 27, 0, 0, 0, 41, 38, 0, 52, 2, 0, 0, 0, 0, 1, 0, 4, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00012338929057698067
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.3678340381092324
(criterion, corr) = ("A", true)
(m, n, seed) = (80, 8, 3)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.21912321669203158
------------------------------------------------------------------------------------
          1|          1|          3| -2.51722e+00 2.19123e-01 2.7e+00 1.2e+01| 1.3e-02 1.3e-02|  11
 [Integer solution found!]
        589|       1155|       1175| -2.46305e+00 -2.46305e+00 5.1e-06 2.1e-06| 6.7e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.668326796
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]
solution = -2.463048455700541
num_nodes = 1175
stage = 0
branch_count = [13, 0, 1, 0, 0, 10, 0, 26, 10, 5, 0, 0, 0, 0, 25, 1, 0, 20, 0, 1, 0, 5, 0, 37, 16, 12, 7, 0, 0, 0, 0, 4, 0, 9, 0, 5, 0, 0, 13, 3, 0, 19, 17, 26, 1, 0, 0, 0, 34, 1, 0, 18, 0, 2, 22, 22, 0, 0, 0, 7, 0, 9, 2, 0, 63, 5, 0, 1, 1, 0, 0, 0, 0, 19, 59, 21, 11, 3, 0, 1]
is_feasible = true
status = "optimal"
dual_gap = 5.080743174623592e-6
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.463048455700541
(criterion, corr) = ("A", true)
(m, n, seed) = (80, 8, 4)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 12.231212328857616
------------------------------------------------------------------------------------
          1|          1|          3| -2.93461e+00 1.22312e+01 1.5e+01 5.2e+00| 2.5e-01 2.5e-01|  33
 [Integer solution found!]
        118|        234|        235| -2.88952e+00 -2.88952e+00 1.5e-06 5.1e-07| 3.3e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.332556445
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -2.8895162138296246
num_nodes = 235
stage = 1
branch_count = [0, 0, 7, 0, 0, 0, 0, 0, 7, 4, 0, 7, 0, 1, 0, 5, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 8, 0, 0, 0, 8, 0, 1, 0, 5, 1, 11, 0, 0, 0, 0, 0, 1, 0, 10, 0, 0, 0, 0, 0, 0, 0, 3, 8, 2, 0, 0, 0, 2, 1, 5, 0, 3, 0, 8, 0, 1, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.4727416082216394e-6
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.8895162138296246
(criterion, corr) = ("A", true)
(m, n, seed) = (80, 8, 5)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.724401296263953
------------------------------------------------------------------------------------
          1|          1|          3| -2.69319e+00 1.72440e+00 4.4e+00 2.6e+00| 1.5e-02 1.5e-02|  14
 [Integer solution found!]
       1173|       1877|       2289| -2.63325e+00 -2.63299e+00 2.5e-04 9.6e-05| 9.8e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.98102766
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
solution = -2.6329943878048168
num_nodes = 2289
stage = 0
branch_count = [0, 52, 3, 30, 0, 0, 0, 0, 0, 1, 0, 1, 39, 0, 42, 0, 0, 46, 0, 50, 0, 0, 0, 36, 53, 9, 0, 0, 0, 0, 26, 2, 2, 7, 0, 4, 25, 0, 30, 0, 0, 6, 0, 71, 0, 0, 34, 0, 0, 0, 17, 19, 0, 57, 102, 13, 0, 0, 11, 0, 15, 0, 55, 0, 0, 0, 0, 76, 0, 12, 12, 3, 16, 67, 59, 0, 0, 0, 27, 14]
is_feasible = true
status = "optimal"
dual_gap = 0.0002527804900243069
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.6329943878048168
(criterion, corr) = ("A", true)
(m, n, seed) = (100, 10, 1)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.3600509240775256
------------------------------------------------------------------------------------
          1|          1|          3| -2.90699e+00 1.36005e+00 4.3e+00 3.1e+00| 1.5e-02 1.5e-02|  14
      10000|       7522|      20001| -2.83192e+00 1.36005e+00 4.2e+00 3.1e+00| 1.2e+01 1.0e-03|   3
 [Integer solution found!]
      16511|      23147|      32953| -2.82604e+00 -2.82602e+00 2.7e-05 9.5e-06| 1.9e+01 0.0e+00|   3
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 18.565768022
sol_x = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.826017755604819
num_nodes = 32953
stage = 0
branch_count = [0, 24, 0, 205, 33, 0, 194, 1, 226, 0, 23, 0, 0, 434, 0, 696, 21, 16, 0, 214, 355, 0, 93, 0, 113, 0, 26, 8, 18, 0, 34, 308, 76, 166, 388, 204, 478, 672, 0, 553, 41, 283, 0, 79, 0, 18, 44, 620, 22, 0, 0, 0, 0, 474, 417, 41, 196, 235, 0, 355, 0, 462, 233, 0, 89, 1, 0, 0, 322, 0, 9, 352, 326, 394, 93, 765, 0, 1, 231, 0, 2, 695, 948, 3, 4, 0, 9, 0, 103, 841, 173, 301, 345, 7, 162, 0, 0, 204, 874, 123]
is_feasible = true
status = "optimal"
dual_gap = 2.6918155568989022e-5
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.826017755604819
(criterion, corr) = ("A", true)
(m, n, seed) = (100, 10, 2)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.52121773978447
------------------------------------------------------------------------------------
          1|          1|          3| -2.69957e+00 1.52122e+00 4.2e+00 2.8e+00| 2.0e-02 2.0e-02|  15
      10000|      11100|      20001| -2.62935e+00 1.52122e+00 4.2e+00 2.7e+00| 1.3e+01 2.0e-03|   3
      20000|      24658|      40001| -2.62196e+00 1.52122e+00 4.1e+00 2.7e+00| 2.5e+01 1.0e-03|   3
 [Integer solution found!]
      27047|      40597|      51965| -2.61912e+00 -2.61868e+00 4.4e-04 1.7e-04| 3.3e+01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 32.657216756
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0]
solution = -2.6186844112688554
num_nodes = 51965
stage = 0
branch_count = [1, 0, 708, 0, 818, 1, 1164, 0, 1, 366, 1, 2, 2, 301, 24, 623, 329, 5, 264, 609, 0, 826, 0, 0, 0, 101, 0, 230, 269, 3, 476, 10, 0, 0, 49, 0, 0, 206, 1122, 0, 346, 0, 222, 569, 1320, 27, 1166, 1, 2, 157, 0, 0, 24, 184, 4, 351, 420, 558, 0, 94, 0, 0, 0, 0, 625, 0, 679, 432, 11, 104, 762, 1, 791, 787, 270, 1566, 9, 412, 439, 0, 0, 0, 0, 3, 377, 1, 181, 922, 171, 416, 550, 611, 723, 324, 336, 380, 41, 22, 80, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0004374307129899613
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.6186844112688554
(criterion, corr) = ("A", true)
(m, n, seed) = (100, 10, 3)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.4057027909870668
------------------------------------------------------------------------------------
          1|          1|          3| -2.84653e+00 4.05703e-01 3.3e+00 8.0e+00| 2.1e-02 2.1e-02|  11
 [Integer solution found!]
       4611|       4967|       8245| -2.76815e+00 -2.76679e+00 1.4e-03 4.9e-04| 4.7e+00 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 4.748369662
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.766789444336168
num_nodes = 8245
stage = 0
branch_count = [0, 0, 0, 15, 59, 13, 0, 72, 0, 0, 4, 109, 0, 154, 1, 3, 1, 0, 22, 45, 135, 0, 0, 3, 0, 3, 1, 0, 1, 0, 0, 0, 0, 92, 0, 193, 15, 45, 110, 0, 0, 226, 1, 2, 1, 0, 0, 0, 11, 0, 0, 145, 0, 0, 9, 0, 99, 114, 1, 38, 120, 0, 259, 73, 193, 0, 196, 0, 134, 6, 0, 56, 0, 0, 131, 0, 1, 34, 35, 17, 142, 54, 0, 139, 1, 0, 185, 0, 218, 0, 0, 142, 0, 0, 0, 0, 17, 81, 145, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.001357485322822427
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.7667894443361685
(criterion, corr) = ("A", true)
(m, n, seed) = (100, 10, 4)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 2.3091864101830915
------------------------------------------------------------------------------------
          1|          1|          3| -3.03129e+00 2.30919e+00 5.3e+00 2.3e+00| 2.3e-02 2.3e-02|  15
      10000|      10370|      20001| -2.95143e+00 2.30919e+00 5.3e+00 2.3e+00| 1.2e+01 1.0e-03|   3
      20000|      16324|      40001| -2.94313e+00 2.30919e+00 5.3e+00 2.3e+00| 2.2e+01 1.0e-03|   3
      30000|      42542|      60001| -2.93812e+00 2.30919e+00 5.2e+00 2.3e+00| 3.3e+01 1.0e-03|   3
 [Integer solution found!]
      34097|      29785|      64061| -2.93731e+00 -2.93653e+00 7.8e-04 2.6e-04| 3.7e+01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 36.999158337
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.9365302539319726
num_nodes = 64061
stage = 0
branch_count = [0, 0, 654, 123, 548, 0, 0, 132, 0, 32, 1, 112, 1194, 0, 121, 334, 530, 0, 826, 0, 4, 0, 8, 1326, 124, 901, 1, 178, 139, 1068, 2023, 0, 804, 504, 84, 1132, 0, 0, 0, 100, 937, 631, 648, 10, 0, 422, 0, 935, 1021, 1358, 493, 543, 1101, 0, 577, 0, 959, 0, 332, 157, 0, 0, 299, 230, 28, 16, 132, 368, 727, 141, 9, 0, 61, 12, 12, 1273, 0, 749, 0, 760, 980, 0, 702, 0, 1026, 0, 0, 50, 803, 141, 19, 0, 47, 6, 5, 0, 1, 0, 306, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0007777736758729503
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.936530253931972
(criterion, corr) = ("A", true)
(m, n, seed) = (100, 10, 5)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 4.290052056034268
------------------------------------------------------------------------------------
          1|          1|          3| -2.80385e+00 4.29005e+00 7.1e+00 2.5e+00| 2.0e-02 2.0e-02|  18
      10000|       3820|      20001| -2.72721e+00 4.29005e+00 7.0e+00 2.6e+00| 1.1e+01 1.0e-03|   3
 [Integer solution found!]
      20000|      24652|      37637| -2.71960e+00 -2.71881e+00 7.9e-04 2.9e-04| 2.2e+01 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
      20113|      24797|      37637| -2.71960e+00 -2.71881e+00 7.9e-04 2.9e-04| 2.2e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 21.682988248
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0]
solution = -2.7188108962799475
num_nodes = 37637
stage = 0
branch_count = [114, 1, 7, 0, 0, 0, 35, 0, 0, 635, 0, 182, 41, 608, 0, 381, 503, 0, 0, 612, 0, 590, 14, 0, 0, 364, 422, 0, 423, 421, 162, 0, 0, 496, 0, 0, 0, 199, 0, 0, 0, 474, 810, 22, 249, 393, 0, 0, 195, 38, 249, 206, 113, 122, 301, 235, 0, 1, 0, 259, 0, 0, 144, 290, 29, 184, 1, 12, 599, 0, 0, 798, 435, 34, 129, 2, 1, 2, 470, 13, 0, 21, 566, 28, 1, 1390, 0, 0, 2, 875, 0, 431, 4, 557, 67, 572, 587, 661, 36, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.0007895542117020149
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.718810896279947
(criterion, corr) = ("A", true)
(m, n, seed) = (120, 12, 1)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.19715552194849956
------------------------------------------------------------------------------------
          1|          1|          3| -3.03485e+00 -1.97156e-01 2.8e+00 1.4e+01| 2.3e-02 2.3e-02|  13
      10000|       9052|      20001| -2.97189e+00 -1.97156e-01 2.8e+00 1.4e+01| 1.4e+01 1.0e-03|   3
      20000|      27176|      40001| -2.96521e+00 -1.97156e-01 2.8e+00 1.4e+01| 2.8e+01 1.0e-03|   3
      30000|      28364|      60001| -2.96123e+00 -1.97156e-01 2.8e+00 1.4e+01| 4.1e+01 1.0e-03|   3
      40000|      45480|      80001| -2.95837e+00 -1.97156e-01 2.8e+00 1.4e+01| 5.4e+01 1.0e-03|   3
 [Integer solution found!]
      43261|      86485|      86521| -2.95759e+00 -2.95759e+00 2.1e-08 7.2e-09| 5.9e+01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 58.63318828
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0]
solution = -2.957585843799939
num_nodes = 86521
stage = 1
branch_count = [435, 4, 26, 855, 0, 60, 97, 244, 0, 0, 582, 588, 0, 227, 0, 31, 1842, 0, 1531, 226, 0, 760, 1, 0, 1382, 1182, 1804, 1054, 0, 1050, 1158, 9, 21, 0, 855, 0, 0, 2, 1505, 1085, 519, 71, 0, 0, 1118, 0, 376, 504, 0, 0, 0, 851, 581, 21, 76, 80, 43, 926, 0, 1, 982, 98, 55, 0, 3, 22, 0, 1, 1430, 17, 0, 0, 0, 174, 958, 3, 0, 815, 775, 4, 578, 1948, 1, 901, 0, 971, 0, 7, 50, 863, 467, 344, 1, 262, 12, 444, 1142, 43, 51, 212, 708, 1308, 782, 502, 778, 219, 14, 234, 0, 397, 47, 0, 786, 29, 0, 12, 1, 26, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 2.1423980811619003e-8
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.957585843799939
(criterion, corr) = ("A", true)
(m, n, seed) = (120, 12, 2)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.10385816684444864
------------------------------------------------------------------------------------
          1|          1|          3| -2.89873e+00 -1.03858e-01 2.8e+00 2.7e+01| 3.4e-02 3.4e-02|  11
      10000|      10766|      20001| -2.83454e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.5e+01 1.0e-03|   3
      20000|      22638|      40001| -2.82765e+00 -1.03858e-01 2.7e+00 2.6e+01| 3.1e+01 1.0e-03|   3
      30000|      21514|      60001| -2.82364e+00 -1.03858e-01 2.7e+00 2.6e+01| 4.5e+01 2.0e-03|   3
      40000|      23022|      80001| -2.82071e+00 -1.03858e-01 2.7e+00 2.6e+01| 6.0e+01 2.0e-03|   3
      50000|      62632|     100001| -2.81845e+00 -1.03858e-01 2.7e+00 2.6e+01| 7.4e+01 1.0e-03|   3
      60000|      81136|     120001| -2.81655e+00 -1.03858e-01 2.7e+00 2.6e+01| 8.9e+01 2.0e-03|   3
      70000|      84866|     140001| -2.81497e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.0e+02 2.0e-03|   3
      80000|     121804|     160001| -2.81358e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.2e+02 1.0e-03|   3
      90000|     161288|     180001| -2.81235e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.4e+02 2.0e-03|   3
     100000|      95024|     200001| -2.81125e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.5e+02 2.0e-03|   3
     110000|     136374|     220001| -2.81026e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.7e+02 1.0e-03|   3
     120000|     185072|     240001| -2.80934e+00 -1.03858e-01 2.7e+00 2.6e+01| 1.9e+02 2.0e-03|   2
     130000|     163478|     260001| -2.80849e+00 -1.03858e-01 2.7e+00 2.6e+01| 2.0e+02 2.0e-03|   3
 [Integer solution found!]
     140000|     153696|     263215| -2.80769e+00 -2.80424e+00 3.5e-03 1.2e-03| 2.2e+02 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     150000|     213838|     263501| -2.80726e+00 -2.80627e+00 9.9e-04 3.5e-04| 2.4e+02 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     160000|     215978|     263501| -2.80726e+00 -2.80627e+00 9.9e-04 3.5e-04| 2.5e+02 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
     160453|     149275|     263501| -2.80726e+00 -2.80627e+00 9.9e-04 3.5e-04| 2.6e+02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 255.595268003
sol_x = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.806267693268895
num_nodes = 263501
stage = 0
branch_count = [0, 0, 2311, 1935, 1545, 2606, 0, 2359, 0, 0, 0, 274, 958, 5390, 55, 0, 486, 1406, 0, 84, 1876, 0, 0, 1706, 412, 45, 685, 1781, 3400, 1618, 0, 2359, 1806, 574, 0, 1230, 77, 1422, 4681, 287, 1055, 608, 88, 620, 0, 3764, 0, 55, 2, 64, 113, 0, 78, 4, 596, 745, 874, 2779, 1511, 192, 1772, 1366, 928, 4065, 121, 3056, 0, 28, 903, 4, 0, 322, 3053, 2965, 346, 8306, 25, 0, 1965, 0, 0, 2500, 68, 4513, 0, 0, 275, 5037, 1, 3718, 1, 2484, 4, 45, 86, 3715, 767, 3966, 514, 2045, 1, 1, 0, 0, 4989, 0, 204, 2690, 1291, 38, 601, 1032, 0, 81, 0, 1928, 2230, 861, 295, 28]
is_feasible = true
status = "optimal"
dual_gap = 0.0009878451387081988
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.806267693268895
(criterion, corr) = ("A", true)
(m, n, seed) = (120, 12, 3)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 2.9402238777922185
------------------------------------------------------------------------------------
          1|          1|          3| -2.98683e+00 2.94022e+00 5.9e+00 2.0e+00| 3.3e-02 3.3e-02|  16
      10000|      11348|      20001| -2.92441e+00 2.94022e+00 5.9e+00 2.0e+00| 2.2e+01 1.0e-03|   3
      20000|      23426|      40001| -2.91786e+00 2.94022e+00 5.9e+00 2.0e+00| 4.2e+01 2.0e-03|   3
      30000|      37344|      60001| -2.91395e+00 2.94022e+00 5.9e+00 2.0e+00| 5.7e+01 2.0e-03|   3
      40000|      36158|      80001| -2.91114e+00 2.94022e+00 5.9e+00 2.0e+00| 7.2e+01 1.0e-03|   4
      50000|      46340|     100001| -2.90895e+00 2.94022e+00 5.8e+00 2.0e+00| 8.7e+01 2.0e-03|   3
      60000|      76704|     120001| -2.90715e+00 2.94022e+00 5.8e+00 2.0e+00| 1.0e+02 2.0e-03|   3
      70000|      72730|     140001| -2.90561e+00 2.94022e+00 5.8e+00 2.0e+00| 1.2e+02 1.0e-03|   3
      80000|      90090|     160001| -2.90423e+00 2.94022e+00 5.8e+00 2.0e+00| 1.3e+02 2.0e-03|   3
      90000|      79958|     180001| -2.90307e+00 2.94022e+00 5.8e+00 2.0e+00| 1.5e+02 1.0e-03|   3
     100000|      94806|     200001| -2.90200e+00 2.94022e+00 5.8e+00 2.0e+00| 1.7e+02 2.0e-03|   2
     110000|     149466|     220001| -2.90103e+00 2.94022e+00 5.8e+00 2.0e+00| 1.8e+02 2.0e-03|   3
     120000|     117928|     240001| -2.90016e+00 2.94022e+00 5.8e+00 2.0e+00| 2.0e+02 2.0e-03|   3
     130000|     209032|     260001| -2.89934e+00 2.94022e+00 5.8e+00 2.0e+00| 2.2e+02 1.0e-03|   3
     140000|     140172|     280001| -2.89855e+00 2.94022e+00 5.8e+00 2.0e+00| 2.4e+02 2.0e-03|   3
     150000|     154050|     300001| -2.89784e+00 2.94022e+00 5.8e+00 2.0e+00| 2.6e+02 2.0e-03|   3
     160000|     160056|     320001| -2.89718e+00 2.94022e+00 5.8e+00 2.0e+00| 2.8e+02 2.0e-03|   3
     170000|     242694|     340001| -2.89656e+00 2.94022e+00 5.8e+00 2.0e+00| 2.9e+02 1.0e-03|   3
     180000|     238988|     360001| -2.89595e+00 2.94022e+00 5.8e+00 2.0e+00| 3.1e+02 2.0e-03|   3
     190000|     316412|     380001| -2.89538e+00 2.94022e+00 5.8e+00 2.0e+00| 3.3e+02 2.0e-03|   4
     200000|     199118|     400001| -2.89485e+00 2.94022e+00 5.8e+00 2.0e+00| 3.5e+02 2.0e-03|   3
     210000|     241874|     420001| -2.89434e+00 2.94022e+00 5.8e+00 2.0e+00| 3.7e+02 3.0e-03|   3
     220000|     266754|     440001| -2.89384e+00 2.94022e+00 5.8e+00 2.0e+00| 3.9e+02 2.0e-03|   3
     230000|     315572|     460001| -2.89338e+00 2.94022e+00 5.8e+00 2.0e+00| 4.1e+02 2.0e-03|   3
     240000|     332692|     480001| -2.89294e+00 2.94022e+00 5.8e+00 2.0e+00| 4.3e+02 2.0e-03|   3
     250000|     296778|     500001| -2.89249e+00 2.94022e+00 5.8e+00 2.0e+00| 4.5e+02 2.0e-03|   3
 [Integer solution found!]
     260000|     342978|     504825| -2.89221e+00 -2.89194e+00 2.7e-04 9.3e-05| 4.7e+02 3.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     262428|     504826|     504827| -2.89198e+00 -2.89198e+00 7.6e-07 2.6e-07| 4.7e+02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 471.781710198
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0]
solution = -2.891978854091291
num_nodes = 504827
stage = 1
branch_count = [0, 0, 4371, 3793, 4698, 3836, 5520, 0, 157, 10520, 75, 7955, 24, 236, 40, 1455, 5256, 0, 0, 179, 0, 1755, 12, 3772, 0, 1, 8558, 6175, 0, 2374, 5482, 6987, 101, 0, 20, 3404, 2325, 981, 2, 0, 4, 0, 10280, 290, 0, 25, 2631, 2535, 0, 721, 0, 0, 4223, 8510, 11, 3173, 5, 1, 22, 249, 1833, 4363, 7689, 7, 0, 0, 5, 2232, 587, 1993, 0, 6791, 3487, 3568, 0, 4823, 0, 336, 4, 3476, 0, 6769, 5362, 517, 0, 5389, 1397, 438, 254, 3, 63, 0, 528, 11754, 43, 3609, 107, 2731, 217, 3045, 1242, 0, 1386, 2344, 3555, 3658, 3294, 8585, 7197, 352, 995, 4797, 114, 2974, 3548, 493, 4, 1429, 273, 9]
is_feasible = true
status = "optimal"
dual_gap = 7.55849486111515e-7
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.891978854091291
(criterion, corr) = ("A", true)
(m, n, seed) = (120, 12, 4)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.6438572206626416
------------------------------------------------------------------------------------
          1|          1|          3| -3.09124e+00 6.43857e-01 3.7e+00 5.8e+00| 7.8e-02 7.8e-02|  13
      10000|      11428|      20001| -3.02483e+00 6.43857e-01 3.7e+00 5.7e+00| 2.0e+01 1.0e-03|   3
      20000|      30128|      40001| -3.01781e+00 6.43857e-01 3.7e+00 5.7e+00| 3.8e+01 2.0e-03|   3
      30000|      32172|      60001| -3.01374e+00 6.43857e-01 3.7e+00 5.7e+00| 5.7e+01 1.0e-03|   3
      40000|      43716|      80001| -3.01072e+00 6.43857e-01 3.7e+00 5.7e+00| 7.6e+01 2.0e-03|   3
      50000|      73412|     100001| -3.00837e+00 6.43857e-01 3.7e+00 5.7e+00| 9.5e+01 2.0e-03|   3
      60000|      64426|     120001| -3.00651e+00 6.43857e-01 3.7e+00 5.7e+00| 1.1e+02 2.0e-03|   3
 [Integer solution found!]
      70000|      99122|     133441| -3.00525e+00 -3.00432e+00 9.3e-04 3.1e-04| 1.3e+02 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
      73739|      69105|     133441| -3.00525e+00 -3.00432e+00 9.3e-04 3.1e-04| 1.4e+02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 140.447322719
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -3.004324759213526
num_nodes = 133441
stage = 0
branch_count = [3, 1079, 0, 0, 0, 2612, 96, 288, 1795, 1993, 1763, 35, 966, 527, 0, 809, 0, 1355, 1, 3005, 0, 3, 1368, 167, 388, 1893, 0, 1796, 103, 0, 2174, 899, 0, 906, 43, 368, 2239, 3, 425, 1423, 33, 261, 0, 476, 1243, 0, 284, 0, 456, 25, 1, 236, 92, 0, 2, 31, 1553, 47, 1, 654, 0, 0, 382, 49, 114, 46, 1719, 3949, 735, 814, 469, 82, 9, 571, 1125, 0, 5, 0, 84, 0, 0, 1476, 6, 69, 0, 1466, 0, 0, 0, 1532, 0, 0, 1450, 829, 2174, 3, 1292, 749, 0, 0, 92, 0, 0, 1, 1636, 145, 20, 469, 3453, 0, 78, 847, 251, 144, 0, 1288, 0, 0, 9, 1168]
is_feasible = true
status = "optimal"
dual_gap = 0.0009260381166544818
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -3.004324759213526
(criterion, corr) = ("A", true)
(m, n, seed) = (120, 12, 5)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 1.318131176837731
------------------------------------------------------------------------------------
          1|          1|          3| -3.02247e+00 1.31813e+00 4.3e+00 3.3e+00| 2.6e-02 2.6e-02|  14
      10000|       2236|      20001| -2.95706e+00 1.31813e+00 4.3e+00 3.2e+00| 2.1e+01 3.0e-03|   3
      20000|      22872|      40001| -2.95047e+00 1.31813e+00 4.3e+00 3.2e+00| 4.1e+01 2.0e-03|   3
      30000|      24878|      60001| -2.94646e+00 1.31813e+00 4.3e+00 3.2e+00| 6.0e+01 1.0e-03|   3
      40000|      59762|      80001| -2.94367e+00 1.31813e+00 4.3e+00 3.2e+00| 8.0e+01 1.0e-03|   4
 [Integer solution found!]
      50000|      68796|      89627| -2.94153e+00 -2.93910e+00 2.4e-03 8.2e-04| 9.8e+01 2.0e-03|   3
 [Node cut because it is worse than the incumbent!]
      60000|      68148|      89797| -2.93981e+00 -2.93910e+00 7.1e-04 2.4e-04| 1.2e+02 2.0e-03|   2
 [Node cut because it is worse than the incumbent!]
      63625|      64117|      89797| -2.93981e+00 -2.93910e+00 7.1e-04 2.4e-04| 1.2e+02 2.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 123.258436833
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -2.9391029576432928
num_nodes = 89797
stage = 0
branch_count = [492, 303, 46, 60, 0, 724, 869, 0, 243, 0, 0, 0, 591, 1111, 6, 231, 1380, 686, 0, 1228, 620, 7, 0, 1234, 255, 1035, 0, 1087, 47, 0, 633, 5, 0, 0, 553, 1492, 749, 0, 235, 0, 210, 35, 0, 109, 15, 325, 728, 1168, 41, 0, 0, 0, 931, 409, 0, 974, 24, 0, 36, 638, 6, 0, 483, 0, 0, 60, 1221, 131, 1837, 27, 1073, 0, 0, 0, 781, 0, 229, 1776, 902, 272, 1373, 24, 0, 0, 449, 8, 0, 41, 0, 63, 1050, 2923, 56, 0, 48, 1210, 1684, 174, 1600, 154, 0, 10, 0, 0, 7, 0, 512, 0, 0, 0, 3, 7, 0, 5, 993, 0, 929, 787, 6, 419]
is_feasible = true
status = "optimal"
dual_gap = 0.0007055439183378809
------------------------------------------------------------------------------------

obj = log(LinearAlgebra.tr(LinearAlgebra.inv(transpose(A) * diagm(x) * A))) = -2.939102957643293
(criterion, corr) = ("D", false)
(m, n, seed) = (50, 5, 1)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.1061144767641713
------------------------------------------------------------------------------------
          1|          1|          3| -4.46268e-02 1.06114e-01 1.5e-01 3.4e+00| 1.2e-01 1.2e-01|  11
 [Integer solution found!]
         55|         37|        101| -4.17309e-02 -4.16444e-02 8.7e-05 2.1e-03| 1.3e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.133803085
sol_x = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.04164443181669686
num_nodes = 101
stage = 0
branch_count = [0, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 4, 1, 3, 0, 5, 6, 0, 0, 7, 0, 0, 3, 1, 4, 0, 2, 0, 2, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 8.65023228634812e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.04164443181669593
(criterion, corr) = ("D", false)
(m, n, seed) = (50, 5, 2)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.10651332980079946
------------------------------------------------------------------------------------
          1|          1|          3| -4.33542e-02 1.06513e-01 1.5e-01 3.5e+00| 3.0e-03 3.0e-03|   9
 [Integer solution found!]
 [Integer solution found!]
         53|         91|         95| -4.02420e-02 -4.02420e-02 4.0e-16 9.8e-15| 1.6e-02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.01638562
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.04024201514904664
num_nodes = 95
stage = 1
branch_count = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 1, 0, 0, 0, 1, 4, 0, 8, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 8, 0, 0, 0, 2, 2, 4, 0, 0, 0, 4, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 3.95516952522712e-16
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.040242015149045775
(criterion, corr) = ("D", false)
(m, n, seed) = (50, 5, 3)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.05996471429243233
------------------------------------------------------------------------------------
          1|          1|          3| -3.81164e-02 5.99647e-02 9.8e-02 2.6e+00| 4.0e-03 4.0e-03|   8
 [Integer solution found!]
        175|        177|        269| -3.49976e-02 -3.46928e-02 3.0e-04 8.8e-03| 1.1e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.107929653
sol_x = [0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.03469278552662489
num_nodes = 269
stage = 0
branch_count = [0, 12, 13, 1, 2, 0, 2, 4, 12, 0, 0, 0, 0, 6, 0, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 12, 7, 0, 6, 0, 0, 0, 0, 0, 7, 0, 0, 8, 3, 9, 0, 0, 13, 1, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00030483544804343204
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.03469278552662383
(criterion, corr) = ("D", false)
(m, n, seed) = (50, 5, 4)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.09340773375458788
------------------------------------------------------------------------------------
          1|          1|          3| -3.80158e-02 9.34077e-02 1.3e-01 3.5e+00| 5.0e-03 5.0e-03|   8
 [Integer solution found!]
         89|        117|        163| -3.46828e-02 -3.45958e-02 8.7e-05 2.5e-03| 4.4e-02 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.044684498
sol_x = [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.03459581892556563
num_nodes = 163
stage = 0
branch_count = [0, 9, 0, 0, 0, 7, 0, 0, 0, 1, 4, 0, 0, 3, 2, 0, 0, 9, 0, 6, 0, 2, 1, 2, 3, 0, 0, 0, 4, 0, 3, 0, 0, 1, 0, 0, 0, 0, 2, 8, 5, 1, 0, 0, 4, 0, 0, 0, 0, 4]
is_feasible = true
status = "optimal"
dual_gap = 8.701548493245115e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.0345958189255646
(criterion, corr) = ("D", false)
(m, n, seed) = (50, 5, 5)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.09203111325658128
------------------------------------------------------------------------------------
          1|          1|          3| -3.86859e-02 9.20311e-02 1.3e-01 3.4e+00| 6.0e-03 6.0e-03|   8
 [Integer solution found!]
         17|         31|         33| -3.69801e-02 -3.69801e-02 4.4e-16 1.2e-14| 1.3e-02 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.013033112
sol_x = [1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.03698008695420628
num_nodes = 33
stage = 1
branch_count = [0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 3, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 4.371503159461554e-16
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.03698008695420531
(criterion, corr) = ("D", false)
(m, n, seed) = (60, 6, 1)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.06589323757711169
------------------------------------------------------------------------------------
          1|          1|          3| -5.30350e-02 6.58932e-02 1.2e-01 2.2e+00| 6.0e-03 6.0e-03|   9
 [Integer solution found!]
        223|        259|        439| -4.98869e-02 -4.98857e-02 1.3e-06 2.5e-05| 1.3e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.134356787
sol_x = [0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
solution = -0.049885659972499725
num_nodes = 439
stage = 0
branch_count = [0, 15, 0, 1, 0, 26, 0, 4, 5, 1, 0, 4, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 16, 10, 7, 12, 9, 4, 0, 0, 8, 0, 0, 4, 0, 0, 0, 11, 0, 11, 0, 0, 0, 0, 1, 19, 0, 0, 0, 0, 0, 11, 1, 0, 0, 0, 12, 0, 0, 19]
is_feasible = true
status = "optimal"
dual_gap = 1.2507932417304968e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.04988565997249887
(criterion, corr) = ("D", false)
(m, n, seed) = (60, 6, 2)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.08683093438552222
------------------------------------------------------------------------------------
          1|          1|          3| -5.51127e-02 8.68309e-02 1.4e-01 2.6e+00| 8.0e-03 8.0e-03|  11
 [Integer solution found!]
         63|         87|         87| -5.33222e-02 -5.31752e-02 1.5e-04 2.8e-03| 3.9e-02 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.039527014
sol_x = [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]
solution = -0.05317524289799489
num_nodes = 87
stage = 0
branch_count = [0, 0, 4, 0, 0, 0, 2, 2, 0, 0, 1, 0, 1, 5, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 1, 0, 2, 0, 0, 1, 0, 1, 0, 2, 0, 0, 0, 0, 2, 4, 0, 1, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 0.00014698065391177684
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.05317524289799405
(criterion, corr) = ("D", false)
(m, n, seed) = (60, 6, 3)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.07004586334872162
------------------------------------------------------------------------------------
          1|          1|          3| -4.73100e-02 7.00459e-02 1.2e-01 2.5e+00| 8.0e-03 8.0e-03|   7
 [Integer solution found!]
        183|        363|        365| -4.46261e-02 -4.46261e-02 3.5e-16 7.9e-15| 1.3e-01 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.127951388
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
solution = -0.04462609676949116
num_nodes = 365
stage = 1
branch_count = [1, 0, 0, 7, 0, 0, 1, 0, 5, 0, 0, 1, 0, 0, 0, 0, 12, 0, 0, 17, 0, 1, 0, 2, 0, 2, 20, 7, 0, 0, 0, 18, 1, 0, 0, 0, 5, 4, 2, 5, 0, 11, 0, 0, 6, 0, 0, 0, 3, 0, 11, 8, 7, 12, 8, 0, 1, 0, 4, 0]
is_feasible = true
status = "optimal"
dual_gap = 3.5388358909926865e-16
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.04462609676949024
(criterion, corr) = ("D", false)
(m, n, seed) = (60, 6, 4)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.12795458152351047
------------------------------------------------------------------------------------
          1|          1|          3| -4.69804e-02 1.27955e-01 1.7e-01 3.7e+00| 9.0e-03 9.0e-03|  13
 [Integer solution found!]
         70|        138|        139| -4.50926e-02 -4.50922e-02 3.8e-07 8.3e-06| 5.8e-02 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.058031538
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
solution = -0.04509220435446989
num_nodes = 139
stage = 1
branch_count = [2, 0, 0, 0, 3, 0, 1, 0, 0, 2, 2, 2, 0, 2, 0, 0, 3, 0, 4, 0, 7, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 1, 0, 1, 1, 3, 0, 0, 0, 0, 0, 0, 0, 8, 2, 0, 0, 0, 0, 6, 0, 3, 0, 4, 0, 2, 0, 0, 0, 5]
is_feasible = true
status = "optimal"
dual_gap = 3.7597084182050544e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.045092204354468944
(criterion, corr) = ("D", false)
(m, n, seed) = (60, 6, 5)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.052119059211790046
------------------------------------------------------------------------------------
          1|          1|          3| -5.29248e-02 5.21191e-02 1.1e-01 2.0e+00| 6.0e-03 6.0e-03|   8
 [Integer solution found!]
 [Integer solution found!]
        153|        291|        291| -4.94530e-02 -4.94526e-02 4.4e-07 8.8e-06| 8.6e-02 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.085844298
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.04945256359714397
num_nodes = 291
stage = 1
branch_count = [0, 2, 2, 0, 0, 4, 7, 6, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 14, 0, 0, 0, 0, 6, 0, 0, 15, 0, 1, 0, 7, 0, 6, 0, 1, 0, 0, 19, 6, 0, 0, 0, 8, 1, 3, 6, 18, 0, 1, 0, 1, 0, 0, 3, 0, 0, 4, 0]
is_feasible = true
status = "optimal"
dual_gap = 4.3654557692340834e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.04945256359714307
(criterion, corr) = ("D", false)
(m, n, seed) = (80, 8, 1)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.047193841109419855
------------------------------------------------------------------------------------
          1|          1|          3| -7.54845e-02 4.71938e-02 1.2e-01 2.6e+00| 1.2e-02 1.2e-02|  10
 [Integer solution found!]
        293|        233|        529| -7.29385e-02 -7.28698e-02 6.9e-05 9.4e-04| 3.4e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.344993751
sol_x = [0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.07286980195473787
num_nodes = 529
stage = 0
branch_count = [0, 0, 0, 0, 10, 31, 14, 2, 0, 10, 12, 0, 9, 0, 0, 0, 1, 0, 0, 0, 1, 3, 9, 13, 9, 6, 0, 7, 0, 0, 3, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 6, 0, 0, 0, 2, 1, 14, 0, 8, 0, 10, 0, 8, 7, 8, 0, 21, 4, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 17, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 6.870529729074981e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07286980195473718
(criterion, corr) = ("D", false)
(m, n, seed) = (80, 8, 2)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 2, 2, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.057116931511643904
------------------------------------------------------------------------------------
          1|          1|          3| -6.03531e-02 5.71169e-02 1.2e-01 2.1e+00| 1.0e-02 1.0e-02|   9
 [Integer solution found!]
        591|       1177|       1181| -5.73745e-02 -5.73745e-02 5.2e-16 9.1e-15| 6.2e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.619415287
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
solution = -0.05737448862927901
num_nodes = 1181
stage = 1
branch_count = [38, 0, 42, 30, 0, 0, 0, 10, 28, 0, 0, 0, 19, 0, 0, 7, 0, 0, 26, 2, 42, 0, 42, 19, 0, 0, 0, 1, 0, 0, 1, 2, 16, 3, 0, 12, 1, 8, 0, 15, 40, 5, 0, 15, 0, 0, 0, 22, 1, 0, 2, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 6, 36, 0, 0, 0, 7, 10, 17, 0, 0, 0, 0, 42, 0, 0, 0, 2, 18, 0]
is_feasible = true
status = "optimal"
dual_gap = 5.204170427930421e-16
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.05737448862927826
(criterion, corr) = ("D", false)
(m, n, seed) = (80, 8, 3)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.07572816294679785
------------------------------------------------------------------------------------
          1|          1|          3| -6.76816e-02 7.57282e-02 1.4e-01 2.1e+00| 8.0e-03 8.0e-03|  13
 [Integer solution found!]
        649|        607|       1289| -6.43287e-02 -6.43260e-02 2.7e-06 4.2e-05| 4.9e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.49067373
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.06432603196568881
num_nodes = 1289
stage = 0
branch_count = [13, 0, 0, 39, 0, 9, 0, 0, 31, 0, 0, 0, 1, 0, 21, 2, 0, 0, 34, 0, 11, 44, 0, 0, 0, 21, 19, 0, 0, 1, 0, 1, 0, 30, 9, 0, 5, 11, 2, 62, 19, 0, 3, 4, 21, 0, 22, 0, 0, 0, 0, 18, 23, 0, 0, 0, 4, 0, 10, 1, 0, 1, 0, 0, 0, 0, 36, 0, 53, 0, 0, 0, 0, 0, 14, 3, 19, 7, 20, 0]
is_feasible = true
status = "optimal"
dual_gap = 2.6911170844107213e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.06432603196568806
(criterion, corr) = ("D", false)
(m, n, seed) = (80, 8, 4)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.05262931805988043
------------------------------------------------------------------------------------
          1|          1|          3| -7.08915e-02 5.26293e-02 1.2e-01 2.3e+00| 1.2e-01 1.2e-01|   9
 [Integer solution found!]
        205|        227|        373| -6.79968e-02 -6.79086e-02 8.8e-05 1.3e-03| 2.3e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.234868482
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.06790863075502497
num_nodes = 373
stage = 0
branch_count = [0, 0, 3, 0, 0, 0, 0, 0, 0, 1, 7, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 1, 1, 8, 0, 17, 0, 0, 0, 0, 0, 6, 0, 5, 4, 14, 0, 3, 23, 10, 0, 1, 0, 0, 0, 0, 0, 14, 0, 0, 1, 0, 0, 0, 0, 0, 6, 1, 0, 0, 13, 0, 0, 11, 3, 0, 0, 1, 0, 2, 2, 7, 0, 0, 0, 0, 14, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 8.818745061540956e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.06790863075502426
(criterion, corr) = ("D", false)
(m, n, seed) = (80, 8, 5)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.079426341289761
------------------------------------------------------------------------------------
          1|          1|          3| -6.60293e-02 7.94263e-02 1.5e-01 2.2e+00| 1.4e-02 1.4e-02|  12
 [Integer solution found!]
        132|        260|        263| -6.41484e-02 -6.41476e-02 7.8e-07 1.2e-05| 1.3e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.127682079
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0]
solution = -0.0641476148826146
num_nodes = 263
stage = 1
branch_count = [0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 5, 0, 1, 0, 3, 0, 5, 0, 0, 0, 3, 1, 0, 4, 1, 0, 1, 1, 0, 3, 1, 12, 0, 0, 0, 7, 2, 0, 0, 1, 0, 0, 0, 3, 1, 1, 0, 11, 2, 0, 3, 0, 0, 6, 0, 0, 8, 0, 0, 0, 1, 0, 4, 0, 1, 0, 0, 0, 0, 13, 3, 1, 0, 9, 0, 10, 0]
is_feasible = true
status = "optimal"
dual_gap = 7.76575715830119e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.06414761488261388
(criterion, corr) = ("D", false)
(m, n, seed) = (100, 10, 1)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.040470841934466914
------------------------------------------------------------------------------------
          1|          1|          3| -8.14735e-02 4.04708e-02 1.2e-01 3.0e+00| 8.0e-03 8.0e-03|  11
 [Integer solution found!]
       7585|       7707|      14685| -7.69439e-02 -7.69236e-02 2.0e-05 2.6e-04| 8.4e+00 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 8.406649863
sol_x = [0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.07692362101217726
num_nodes = 14685
stage = 0
branch_count = [0, 213, 0, 86, 0, 596, 8, 5, 0, 315, 29, 61, 181, 0, 0, 391, 0, 0, 1, 156, 0, 12, 123, 14, 29, 0, 54, 1, 153, 1, 4, 201, 0, 25, 0, 19, 1, 163, 0, 1, 0, 275, 267, 23, 280, 61, 0, 228, 0, 32, 131, 0, 0, 31, 0, 0, 151, 87, 0, 24, 0, 1, 0, 3, 455, 287, 0, 430, 0, 6, 37, 8, 0, 4, 72, 169, 0, 3, 96, 0, 218, 0, 152, 94, 0, 220, 0, 165, 16, 27, 0, 142, 0, 292, 0, 0, 0, 12, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 2.0309765136408697e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07692362101217658
(criterion, corr) = ("D", false)
(m, n, seed) = (100, 10, 2)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.06966024036820193
------------------------------------------------------------------------------------
          1|          1|          3| -7.41810e-02 6.96602e-02 1.4e-01 2.1e+00| 1.1e-02 1.1e-02|  10
 [Integer solution found!]
       2822|       5178|       5643| -7.07438e-02 -7.07438e-02 7.3e-10 1.0e-08| 2.8e+00 1.0e-03|   1
------------------------------------------------------------------------------------
time = 2.834798314
sol_x = [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0]
solution = -0.07074382427277973
num_nodes = 5643
stage = 1
branch_count = [0, 39, 0, 56, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 8, 0, 7, 2, 6, 152, 2, 0, 0, 0, 0, 3, 0, 0, 2, 32, 100, 0, 0, 36, 0, 0, 136, 151, 1, 0, 0, 0, 142, 0, 0, 0, 1, 123, 81, 0, 0, 70, 0, 0, 112, 26, 0, 56, 0, 0, 7, 4, 79, 0, 0, 0, 0, 80, 130, 2, 0, 0, 21, 0, 100, 0, 0, 2, 89, 147, 0, 112, 0, 39, 0, 81, 78, 39, 17, 36, 0, 121, 57, 0, 70, 2, 23, 115, 6]
is_feasible = true
status = "optimal"
dual_gap = 7.256745621075922e-10
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07074382427277903
(criterion, corr) = ("D", false)
(m, n, seed) = (100, 10, 3)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.04741743048959315
------------------------------------------------------------------------------------
          1|          1|          3| -7.51825e-02 4.74174e-02 1.2e-01 2.6e+00| 1.9e-02 1.9e-02|  10
      10000|       7952|      20001| -7.14689e-02 4.74174e-02 1.2e-01 2.5e+00| 1.2e+01 1.0e-03|   2
 [Integer solution found!]
 [Integer solution found!]
 [Integer solution found!]
      12203|       7185|      23587| -7.13694e-02 -7.13550e-02 1.4e-05 2.0e-04| 1.3e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 13.492042693
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
solution = -0.07135504810755924
num_nodes = 23587
stage = 0
branch_count = [0, 8, 0, 179, 0, 622, 155, 129, 30, 134, 178, 0, 0, 228, 1, 211, 668, 0, 269, 0, 0, 1, 121, 0, 219, 7, 41, 0, 0, 0, 480, 650, 28, 368, 1, 2, 118, 0, 0, 0, 275, 0, 0, 298, 3, 275, 249, 3, 56, 0, 0, 0, 335, 0, 396, 1, 5, 37, 184, 128, 0, 2, 259, 48, 13, 0, 3, 387, 91, 0, 20, 0, 3, 0, 0, 12, 0, 22, 49, 289, 1, 424, 409, 78, 0, 3, 313, 263, 0, 171, 0, 577, 131, 0, 0, 384, 0, 289, 327, 132]
is_feasible = true
status = "optimal"
dual_gap = 1.4380853805548433e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07135504810755858
(criterion, corr) = ("D", false)
(m, n, seed) = (100, 10, 4)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.079889431055257
------------------------------------------------------------------------------------
          1|          1|          3| -7.83822e-02 7.98894e-02 1.6e-01 2.0e+00| 1.0e-02 1.0e-02|  15
      10000|      16382|      20001| -7.41937e-02 7.98894e-02 1.5e-01 2.1e+00| 7.7e+00 1.0e-03|   3
 [Integer solution found!]
      14356|      28034|      28711| -7.39688e-02 -7.39678e-02 9.8e-07 1.3e-05| 1.1e+01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 11.213068416
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0]
solution = -0.07396783746525715
num_nodes = 28711
stage = 1
branch_count = [469, 252, 0, 0, 0, 627, 5, 0, 0, 208, 208, 0, 166, 0, 1, 0, 0, 0, 43, 391, 0, 0, 62, 52, 292, 140, 283, 0, 424, 255, 215, 36, 3, 63, 19, 1, 7, 4, 962, 75, 17, 0, 8, 636, 316, 3, 320, 46, 0, 31, 0, 283, 38, 0, 0, 809, 451, 0, 338, 349, 291, 258, 0, 58, 0, 470, 0, 0, 0, 0, 689, 241, 0, 6, 0, 0, 0, 34, 0, 1, 0, 385, 311, 0, 218, 0, 0, 0, 0, 264, 112, 1012, 22, 123, 96, 1, 577, 277, 1, 0]
is_feasible = true
status = "optimal"
dual_gap = 9.809512715036606e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07396783746525648
(criterion, corr) = ("D", false)
(m, n, seed) = (100, 10, 5)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.11852094575396403
------------------------------------------------------------------------------------
          1|          1|          3| -7.82091e-02 1.18521e-01 2.0e-01 2.5e+00| 1.1e-02 1.1e-02|  19
      10000|      13828|      20001| -7.45340e-02 1.18521e-01 1.9e-01 2.6e+00| 8.3e+00 1.0e-03|   2
 [Integer solution found!]
 [Integer solution found!]
      19743|      23817|      35585| -7.41659e-02 -7.41567e-02 9.2e-06 1.2e-04| 1.6e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 15.967978058
sol_x = [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.0741566590463649
num_nodes = 35585
stage = 0
branch_count = [457, 2, 337, 0, 0, 6, 615, 173, 541, 8, 143, 0, 303, 559, 0, 0, 0, 121, 115, 242, 455, 155, 150, 0, 378, 0, 3, 821, 0, 559, 0, 278, 0, 4, 0, 161, 451, 617, 0, 442, 1, 284, 0, 0, 3, 12, 218, 709, 0, 0, 133, 0, 44, 0, 32, 0, 0, 0, 0, 512, 28, 0, 837, 0, 0, 174, 264, 0, 846, 0, 1, 181, 132, 0, 17, 0, 101, 609, 215, 307, 62, 1, 0, 0, 402, 0, 732, 128, 776, 265, 94, 352, 216, 813, 0, 0, 2, 21, 172, 0]
is_feasible = true
status = "optimal"
dual_gap = 9.210745291240996e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07415665904636422
(criterion, corr) = ("D", false)
(m, n, seed) = (120, 12, 1)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.007239255059423744
------------------------------------------------------------------------------------
          1|          1|          3| -9.09827e-02 -7.23926e-03 8.4e-02 1.2e+01| 1.3e-02 1.3e-02|   9
      10000|       8062|      20001| -8.74440e-02 -7.23926e-03 8.0e-02 1.1e+01| 1.1e+01 1.0e-03|   2
      20000|      12910|      40001| -8.70976e-02 -7.23926e-03 8.0e-02 1.1e+01| 2.2e+01 2.0e-03|   2
      30000|      32576|      60001| -8.68953e-02 -7.23926e-03 8.0e-02 1.1e+01| 3.2e+01 1.0e-03|   2
      40000|      44890|      80001| -8.67495e-02 -7.23926e-03 8.0e-02 1.1e+01| 4.3e+01 2.0e-03|   2
      50000|      47804|     100001| -8.66351e-02 -7.23926e-03 7.9e-02 1.1e+01| 5.3e+01 1.0e-03|   2
      60000|      89296|     120001| -8.65426e-02 -7.23926e-03 7.9e-02 1.1e+01| 6.4e+01 1.0e-03|   2
 [Integer solution found!]
      68333|      47643|     126387| -8.65160e-02 -8.64761e-02 4.0e-05 4.6e-04| 7.2e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 72.21038487
sol_x = [0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1]
solution = -0.08647614190857661
num_nodes = 126387
stage = 0
branch_count = [0, 1510, 16, 201, 847, 2512, 673, 2413, 0, 586, 67, 5, 0, 307, 0, 2142, 0, 36, 639, 993, 0, 3326, 1421, 2433, 15, 580, 330, 1529, 0, 0, 1401, 173, 0, 240, 0, 451, 3, 1324, 0, 0, 0, 0, 0, 8, 586, 624, 0, 62, 80, 2701, 20, 2038, 1870, 13, 0, 0, 1075, 177, 1961, 863, 129, 697, 1185, 0, 138, 30, 11, 44, 0, 1, 557, 342, 0, 1249, 237, 28, 0, 1119, 0, 0, 382, 0, 0, 0, 0, 939, 714, 1977, 0, 0, 2173, 0, 12, 874, 2352, 1734, 862, 608, 83, 483, 1, 926, 184, 1, 1, 2, 0, 248, 0, 1, 3, 566, 1758, 68, 0, 1010, 6, 0, 0, 1207]
is_feasible = true
status = "optimal"
dual_gap = 3.98694370071645e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.08647614190857604
(criterion, corr) = ("D", false)
(m, n, seed) = (120, 12, 2)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.058202261567631405
------------------------------------------------------------------------------------
          1|          1|          3| -8.59930e-02 5.82023e-02 1.4e-01 2.5e+00| 1.0e-02 1.0e-02|  11
      10000|       4104|      20001| -8.23624e-02 5.82023e-02 1.4e-01 2.4e+00| 1.2e+01 1.0e-03|   2
 [Integer solution found!]
      16766|      31634|      33531| -8.21120e-02 -8.21120e-02 2.5e-08 3.1e-07| 2.0e+01 0.0e+00|   1
------------------------------------------------------------------------------------
time = 19.589787793
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1]
solution = -0.08211196988011571
num_nodes = 33531
stage = 1
branch_count = [0, 81, 0, 327, 1, 173, 0, 0, 40, 1, 0, 0, 545, 27, 669, 659, 10, 9, 0, 29, 559, 0, 7, 137, 0, 19, 368, 0, 152, 0, 50, 0, 30, 0, 0, 364, 21, 405, 599, 330, 484, 101, 272, 17, 0, 46, 0, 37, 10, 263, 0, 0, 212, 0, 0, 205, 103, 62, 1, 124, 237, 5, 0, 0, 48, 0, 240, 0, 0, 196, 594, 532, 250, 401, 0, 20, 231, 0, 380, 0, 0, 0, 227, 133, 1, 0, 83, 81, 0, 3, 806, 379, 23, 321, 4, 0, 0, 126, 85, 166, 690, 222, 886, 77, 14, 44, 0, 343, 0, 348, 117, 69, 0, 0, 0, 11, 0, 25, 33, 765]
is_feasible = true
status = "optimal"
dual_gap = 2.5257831715030932e-8
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.0821119698801151
(criterion, corr) = ("D", false)
(m, n, seed) = (120, 12, 3)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.07952161808056651
------------------------------------------------------------------------------------
          1|          1|          3| -9.13199e-02 7.95216e-02 1.7e-01 2.1e+00| 1.3e-02 1.3e-02|  15
      10000|       9868|      20001| -8.79610e-02 7.95216e-02 1.7e-01 2.1e+00| 1.6e+01 1.0e-03|   2
      20000|      22348|      40001| -8.76315e-02 7.95216e-02 1.7e-01 2.1e+00| 2.9e+01 1.0e-03|   3
      30000|      35304|      60001| -8.74345e-02 7.95216e-02 1.7e-01 2.1e+00| 4.0e+01 2.0e-03|   2
      40000|      41924|      80001| -8.72930e-02 7.95216e-02 1.7e-01 2.1e+00| 5.2e+01 2.0e-03|   2
      50000|      46530|     100001| -8.71828e-02 7.95216e-02 1.7e-01 2.1e+00| 6.4e+01 0.0e+00|   3
      60000|      50142|     120001| -8.70894e-02 7.95216e-02 1.7e-01 2.1e+00| 7.5e+01 1.0e-03|   2
      70000|      66134|     140001| -8.70104e-02 7.95216e-02 1.7e-01 2.1e+00| 8.7e+01 1.0e-03|   3
      80000|      88432|     160001| -8.69445e-02 7.95216e-02 1.7e-01 2.1e+00| 9.9e+01 1.0e-03|   3
 [Integer solution found!]
      90000|     121350|     179999| -8.68848e-02 -8.22347e-02 4.7e-03 5.7e-02| 1.1e+02 1.0e-03|   2
 [Integer solution found!]
      90585|     178093|     181167| -8.68816e-02 -8.68811e-02 5.3e-07 6.1e-06| 1.1e+02 3.0e-03|   1
------------------------------------------------------------------------------------
time = 113.0943002
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0]
solution = -0.08688110300850693
num_nodes = 181167
stage = 1
branch_count = [1818, 0, 274, 0, 0, 0, 239, 0, 1, 0, 0, 0, 2803, 0, 2574, 3789, 94, 0, 310, 3, 1094, 150, 41, 926, 3, 1, 2589, 1911, 328, 0, 0, 0, 0, 1417, 2760, 1618, 0, 1835, 1834, 9, 2, 2088, 5, 2948, 1626, 1103, 937, 2531, 6, 1, 0, 1924, 2303, 0, 36, 1, 0, 2282, 1281, 0, 0, 0, 0, 1, 0, 423, 3397, 0, 696, 0, 1532, 1019, 325, 0, 0, 0, 0, 0, 3853, 1237, 0, 2031, 919, 1252, 1186, 2298, 0, 2017, 472, 648, 0, 434, 2297, 2007, 21, 0, 1454, 86, 2495, 1220, 1158, 13, 0, 0, 23, 0, 29, 62, 3025, 0, 0, 14, 0, 1817, 0, 626, 855, 1, 1819, 326]
is_feasible = true
status = "optimal"
dual_gap = 5.274850140984944e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.08688110300850636
(criterion, corr) = ("D", false)
(m, n, seed) = (120, 12, 4)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.06965156728400916
------------------------------------------------------------------------------------
          1|          1|          3| -8.41525e-02 6.96516e-02 1.5e-01 2.2e+00| 1.1e-02 1.1e-02|  12
      10000|      12834|      20001| -8.05320e-02 6.96516e-02 1.5e-01 2.2e+00| 1.3e+01 1.0e-03|   2
      20000|      25332|      40001| -8.01784e-02 6.96516e-02 1.5e-01 2.2e+00| 2.7e+01 1.0e-03|   2
      30000|      30830|      60001| -7.99717e-02 6.96516e-02 1.5e-01 2.1e+00| 4.1e+01 1.0e-03|   3
      40000|      44174|      80001| -7.98202e-02 6.96516e-02 1.5e-01 2.1e+00| 5.5e+01 2.0e-03|   3
      50000|      45708|     100001| -7.97037e-02 6.96516e-02 1.5e-01 2.1e+00| 6.9e+01 1.0e-03|   2
      60000|      77950|     120001| -7.96065e-02 6.96516e-02 1.5e-01 2.1e+00| 8.0e+01 0.0e+00|   2
      70000|      85084|     140001| -7.95240e-02 6.96516e-02 1.5e-01 2.1e+00| 9.1e+01 0.0e+00|   2
      80000|      68100|     160001| -7.94536e-02 6.96516e-02 1.5e-01 2.1e+00| 1.0e+02 1.0e-03|   3
      90000|      87560|     180001| -7.93899e-02 6.96516e-02 1.5e-01 2.1e+00| 1.1e+02 2.0e-03|   3
     100000|      70912|     200001| -7.93322e-02 6.96516e-02 1.5e-01 2.1e+00| 1.2e+02 1.0e-03|   2
     110000|     108162|     220001| -7.92809e-02 6.96516e-02 1.5e-01 2.1e+00| 1.4e+02 1.0e-03|   2
     120000|     122422|     240001| -7.92349e-02 6.96516e-02 1.5e-01 2.1e+00| 1.5e+02 1.0e-03|   2
     130000|     138900|     260001| -7.91912e-02 6.96516e-02 1.5e-01 2.1e+00| 1.6e+02 1.0e-03|   2
     140000|     197532|     280001| -7.91514e-02 6.96516e-02 1.5e-01 2.1e+00| 1.7e+02 1.0e-03|   3
 [Integer solution found!]
     150000|     102660|     290155| -7.91269e-02 -7.90476e-02 7.9e-05 1.0e-03| 1.9e+02 2.0e-03|   2
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
     160000|     148680|     290163| -7.90838e-02 -7.90476e-02 3.6e-05 4.6e-04| 2.0e+02 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
 [Integer solution found!]
 [Integer solution found!]
     168270|     290162|     290163| -7.90509e-02 -7.90502e-02 7.5e-07 9.4e-06| 2.1e+02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 212.253095649
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0]
solution = -0.07905015875133341
num_nodes = 290163
stage = 1
branch_count = [2, 651, 97, 225, 179, 0, 372, 0, 0, 163, 42, 0, 761, 4153, 0, 2503, 2269, 3106, 2554, 0, 1250, 0, 350, 4117, 0, 0, 54, 62, 0, 89, 1851, 521, 2255, 0, 0, 1, 1553, 179, 4397, 2161, 1, 17, 3608, 54, 3865, 2847, 1, 70, 0, 122, 1437, 6360, 0, 12, 0, 1, 0, 0, 0, 2986, 2454, 51, 0, 3621, 3751, 349, 0, 9, 0, 3288, 11, 2091, 6013, 3526, 12, 2621, 3196, 9, 0, 3869, 20, 1734, 6, 0, 158, 673, 2036, 1582, 3, 3714, 534, 2720, 140, 4671, 0, 0, 696, 14, 19, 0, 794, 1, 3138, 3167, 52, 2, 0, 0, 3131, 484, 2777, 5982, 1559, 4379, 1901, 103, 0, 2453, 4080, 189]
is_feasible = true
status = "optimal"
dual_gap = 7.46161027215253e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.07905015875133278
(criterion, corr) = ("D", false)
(m, n, seed) = (120, 12, 5)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = 0.04254034945751207
------------------------------------------------------------------------------------
          1|          1|          3| -9.37895e-02 4.25403e-02 1.4e-01 3.2e+00| 1.0e-02 1.0e-02|  13
      10000|      14210|      20001| -9.02313e-02 4.25403e-02 1.3e-01 3.1e+00| 1.3e+01 2.0e-03|   3
 [Integer solution found!]
      11565|       2885|      22913| -9.01636e-02 -9.01593e-02 4.3e-06 4.8e-05| 1.5e+01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 14.775116637
sol_x = [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.09015929548444254
num_nodes = 22913
stage = 0
branch_count = [0, 268, 495, 0, 0, 235, 295, 36, 26, 8, 0, 340, 0, 0, 414, 147, 312, 34, 447, 0, 0, 64, 33, 351, 361, 1, 0, 0, 0, 0, 0, 0, 0, 0, 349, 199, 109, 2, 0, 167, 0, 0, 0, 0, 131, 163, 275, 340, 0, 0, 0, 0, 114, 373, 0, 0, 449, 0, 294, 3, 1, 0, 0, 0, 0, 0, 6, 0, 711, 0, 0, 1, 0, 318, 0, 138, 8, 0, 0, 0, 209, 18, 7, 0, 0, 0, 0, 468, 132, 0, 23, 197, 166, 0, 109, 102, 232, 0, 0, 0, 0, 137, 0, 0, 358, 0, 2, 343, 154, 0, 421, 3, 124, 0, 0, 0, 0, 179, 0, 54]
is_feasible = true
status = "optimal"
dual_gap = 4.287296512292538e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.09015929548444204
(criterion, corr) = ("D", true)
(m, n, seed) = (50, 5, 1)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.31077128602761334
------------------------------------------------------------------------------------
          1|          1|          3| -4.40748e-01 -3.10771e-01 1.3e-01 4.2e-01| 4.0e-03 4.0e-03|   9
 [Integer solution found!]
         15|         27|         27| -4.38951e-01 -4.38946e-01 4.7e-06 1.1e-05| 9.0e-03 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.009510677
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
solution = -0.4389460297342367
num_nodes = 27
stage = 0
branch_count = [1, 2, 0, 0, 1, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 4.651787856913003e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.4389460297342367
(criterion, corr) = ("D", true)
(m, n, seed) = (50, 5, 2)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.30636363324657745
------------------------------------------------------------------------------------
          1|          1|          3| -4.55111e-01 -3.06364e-01 1.5e-01 4.9e-01| 7.0e-03 7.0e-03|   7
 [Integer solution found!]
         26|         50|         51| -4.52557e-01 -4.52556e-01 4.8e-07 1.1e-06| 1.7e-02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.017484146
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1]
solution = -0.4525564370243029
num_nodes = 51
stage = 1
branch_count = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 2, 0, 0, 0, 2, 2]
is_feasible = true
status = "optimal"
dual_gap = 4.847718215184038e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.452556437024303
(criterion, corr) = ("D", true)
(m, n, seed) = (50, 5, 3)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3282745787862376
------------------------------------------------------------------------------------
          1|          1|          3| -4.47089e-01 -3.28275e-01 1.2e-01 3.6e-01| 9.0e-03 9.0e-03|   6
 [Integer solution found!]
         21|         35|         39| -4.45289e-01 -4.45270e-01 1.9e-05 4.3e-05| 1.7e-02 1.0e-03|   1
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.01659529
sol_x = [0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.4452695221405012
num_nodes = 39
stage = 0
branch_count = [0, 0, 0, 1, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 5, 0, 2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.9085145249120306e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.4452695221405012
(criterion, corr) = ("D", true)
(m, n, seed) = (50, 5, 4)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.28408673348047303
------------------------------------------------------------------------------------
          1|          1|          3| -4.74421e-01 -2.84087e-01 1.9e-01 6.7e-01| 7.0e-03 7.0e-03|  10
 [Integer solution found!]
         31|         47|         57| -4.72229e-01 -4.72193e-01 3.6e-05 7.6e-05| 1.9e-02 1.0e-03|   1
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.018224658
sol_x = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]
solution = -0.4721925134474174
num_nodes = 57
stage = 0
branch_count = [0, 1, 0, 0, 0, 0, 1, 4, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 3.606643742792848e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.47219251344741736
(criterion, corr) = ("D", true)
(m, n, seed) = (50, 5, 5)
N = 7.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.2931843245828211
------------------------------------------------------------------------------------
          1|          1|          3| -4.72150e-01 -2.93184e-01 1.8e-01 6.1e-01| 5.0e-03 5.0e-03|  10
 [Integer solution found!]
         24|         46|         47| -4.69819e-01 -4.69819e-01 2.0e-07 4.2e-07| 1.4e-02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.014683723
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.469818605490253
num_nodes = 47
stage = 1
branch_count = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 3, 0, 0, 0, 2, 0, 2, 1, 0, 0, 3, 0, 0, 0, 0, 1, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.9818695973228273e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.46981860549025306
(criterion, corr) = ("D", true)
(m, n, seed) = (60, 6, 1)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.24342341778011148
------------------------------------------------------------------------------------
          1|          1|          3| -4.57240e-01 -2.43423e-01 2.1e-01 8.8e-01| 5.0e-03 5.0e-03|  15
 [Integer solution found!]
         34|         66|         67| -4.54604e-01 -4.54604e-01 6.1e-08 1.3e-07| 4.9e-02 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.048963283
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1]
solution = -0.4546039304531777
num_nodes = 67
stage = 1
branch_count = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 5, 0, 3, 0, 0, 4, 2, 0, 0, 0, 5, 2]
is_feasible = true
status = "optimal"
dual_gap = 6.113165962329248e-8
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.4546039304531778
(criterion, corr) = ("D", true)
(m, n, seed) = (60, 6, 2)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.2879414595800815
------------------------------------------------------------------------------------
          1|          1|          3| -4.76914e-01 -2.87941e-01 1.9e-01 6.6e-01| 4.0e-03 4.0e-03|   9
 [Integer solution found!]
         71|        139|        141| -4.74770e-01 -4.74770e-01 8.3e-16 1.8e-15| 3.1e-02 2.0e-03|   0
------------------------------------------------------------------------------------
time = 0.031185394
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0]
solution = -0.4747696152092616
num_nodes = 141
stage = 1
branch_count = [0, 0, 0, 0, 0, 4, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 1, 0, 0, 6, 1, 0, 0, 6, 7, 0, 0, 0, 4, 0, 0, 5, 1, 0, 0, 0, 1, 0, 10, 2, 0, 0, 12, 0, 0, 0, 0, 1]
is_feasible = true
status = "optimal"
dual_gap = 8.326672684688674e-16
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.4747696152092616
(criterion, corr) = ("D", true)
(m, n, seed) = (60, 6, 3)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.331815142933769
------------------------------------------------------------------------------------
          1|          1|          3| -4.83543e-01 -3.31815e-01 1.5e-01 4.6e-01| 8.0e-03 8.0e-03|  12
 [Integer solution found!]
 [Integer solution found!]
        137|        239|        239| -4.80149e-01 -4.80148e-01 7.7e-07 1.6e-06| 8.1e-02 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.08152513
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0]
solution = -0.4801481882453049
num_nodes = 239
stage = 1
branch_count = [0, 0, 0, 9, 4, 0, 0, 0, 0, 6, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 9, 9, 0, 8, 4, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 7, 0, 13, 1, 0, 0, 1, 7, 0, 0, 0, 9, 0, 0, 0, 4, 5, 0]
is_feasible = true
status = "optimal"
dual_gap = 7.737680714492434e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.480148188245305
(criterion, corr) = ("D", true)
(m, n, seed) = (60, 6, 4)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.27595497277489356
------------------------------------------------------------------------------------
          1|          1|          3| -5.04273e-01 -2.75955e-01 2.3e-01 8.3e-01| 7.0e-03 7.0e-03|  11
 [Integer solution found!]
        199|        321|        381| -5.01141e-01 -5.01120e-01 2.2e-05 4.3e-05| 1.2e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.118971225
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.5011196412591132
num_nodes = 381
stage = 0
branch_count = [0, 0, 0, 0, 0, 0, 1, 0, 17, 6, 0, 0, 6, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 20, 0, 0, 0, 0, 3, 0, 11, 8, 0, 18, 0, 0, 0, 9, 0, 0, 0, 0, 0, 13, 13, 1, 0, 0, 8, 0, 1, 0, 13, 2, 1, 0, 0, 0, 21]
is_feasible = true
status = "optimal"
dual_gap = 2.1708666647080044e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5011196412591131
(criterion, corr) = ("D", true)
(m, n, seed) = (60, 6, 5)
N = 9.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 2, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.34053045163996293
------------------------------------------------------------------------------------
          1|          1|          3| -4.88406e-01 -3.40530e-01 1.5e-01 4.3e-01| 1.2e-02 1.2e-02|  11
 [Integer solution found!]
 [Integer solution found!]
        235|        447|        449| -4.85683e-01 -4.85679e-01 4.0e-06 8.3e-06| 2.1e-01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.20944518
sol_x = [1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.4856789905093457
num_nodes = 449
stage = 0
branch_count = [10, 0, 1, 3, 0, 0, 0, 1, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 2, 15, 0, 0, 7, 16, 0, 6, 0, 8, 1, 20, 0, 0, 5, 0, 0, 0, 0, 0, 0, 11, 0, 22, 21, 6, 0, 15, 7, 0, 0, 0, 0, 1, 9, 6, 0, 13]
is_feasible = true
status = "optimal"
dual_gap = 4.01850861020403e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.4856789905093457
(criterion, corr) = ("D", true)
(m, n, seed) = (80, 8, 1)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3459476421208667
------------------------------------------------------------------------------------
          1|          1|          3| -5.29206e-01 -3.45948e-01 1.8e-01 5.3e-01| 7.0e-03 7.0e-03|  12
 [Integer solution found!]
        183|        275|        361| -5.26395e-01 -5.26391e-01 4.0e-06 7.6e-06| 1.2e-01 1.0e-03|   1
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.122525212
sol_x = [0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.526390958284419
num_nodes = 361
stage = 0
branch_count = [0, 0, 0, 0, 4, 0, 0, 0, 13, 12, 1, 0, 0, 0, 0, 0, 13, 0, 0, 2, 14, 0, 11, 0, 3, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 13, 0, 9, 10, 10, 0, 0, 0, 0, 1, 12, 0, 0, 7, 1, 0, 0, 0, 3, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 3.976981029274462e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.526390958284419
(criterion, corr) = ("D", true)
(m, n, seed) = (80, 8, 2)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3384547554017007
------------------------------------------------------------------------------------
          1|          1|          3| -4.97002e-01 -3.38455e-01 1.6e-01 4.7e-01| 8.0e-03 8.0e-03|  11
 [Integer solution found!]
        384|        718|        767| -4.93145e-01 -4.93144e-01 7.3e-07 1.5e-06| 3.3e-01 0.0e+00|   1
------------------------------------------------------------------------------------
time = 0.329962554
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.4931444986589571
num_nodes = 767
stage = 1
branch_count = [0, 13, 0, 0, 9, 26, 0, 0, 5, 0, 0, 0, 0, 0, 13, 0, 2, 15, 18, 21, 39, 0, 0, 0, 0, 0, 5, 0, 6, 0, 0, 2, 0, 0, 0, 14, 0, 0, 22, 0, 6, 0, 1, 21, 0, 30, 0, 0, 12, 0, 3, 0, 0, 2, 8, 4, 0, 0, 20, 0, 2, 0, 1, 0, 0, 0, 28, 10, 0, 18, 3, 4, 0, 0, 0, 0, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 7.331942054600304e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.49314449865895715
(criterion, corr) = ("D", true)
(m, n, seed) = (80, 8, 3)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3535329350856038
------------------------------------------------------------------------------------
          1|          1|          3| -5.01802e-01 -3.53533e-01 1.5e-01 4.2e-01| 6.0e-03 6.0e-03|  10
 [Integer solution found!]
        351|        309|        697| -4.99038e-01 -4.99037e-01 1.8e-06 3.6e-06| 2.9e-01 1.0e-03|   3
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.294860751
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1]
solution = -0.49903667499314985
num_nodes = 697
stage = 0
branch_count = [1, 0, 0, 0, 0, 24, 0, 0, 4, 0, 0, 0, 0, 0, 31, 0, 0, 6, 0, 15, 0, 0, 0, 16, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 26, 0, 24, 30, 13, 0, 0, 0, 0, 12, 0, 0, 2, 11, 0, 17, 2, 0, 0, 0, 0, 0, 0, 0, 0, 23, 10, 20, 0, 8, 0, 0, 0, 0, 1, 14, 0, 31, 0, 0, 3]
is_feasible = true
status = "optimal"
dual_gap = 1.7947801322359958e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.49903667499314974
(criterion, corr) = ("D", true)
(m, n, seed) = (80, 8, 4)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.2384373338128658
------------------------------------------------------------------------------------
          1|          1|          3| -5.43004e-01 -2.38437e-01 3.0e-01 1.3e+00| 3.2e-02 3.2e-02|  32
 [Integer solution found!]
 [Integer solution found!]
        441|        213|        867| -5.39816e-01 -5.39809e-01 6.1e-06 1.1e-05| 3.5e-01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 0.346028227
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]
solution = -0.5398094577379947
num_nodes = 867
stage = 0
branch_count = [1, 0, 23, 0, 0, 0, 0, 0, 22, 11, 5, 0, 0, 0, 0, 21, 36, 0, 3, 0, 12, 0, 0, 0, 0, 0, 5, 0, 0, 0, 40, 0, 0, 0, 3, 2, 31, 0, 0, 16, 0, 0, 1, 0, 15, 0, 0, 0, 0, 0, 0, 0, 5, 43, 36, 0, 0, 0, 0, 0, 33, 0, 19, 0, 21, 13, 0, 0, 0, 0, 0, 0, 0, 1, 0, 15, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 6.073335610645714e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5398094577379947
(criterion, corr) = ("D", true)
(m, n, seed) = (80, 8, 5)
N = 12.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 2, 1, 1, 1, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3424188836343196
------------------------------------------------------------------------------------
          1|          1|          3| -5.20039e-01 -3.42419e-01 1.8e-01 5.2e-01| 9.0e-03 9.0e-03|  11
 [Integer solution found!]
        230|        458|        459| -5.17036e-01 -5.17035e-01 7.5e-07 1.5e-06| 2.1e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.213992186
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5170349076324089
num_nodes = 459
stage = 1
branch_count = [0, 12, 5, 13, 0, 0, 0, 0, 0, 4, 0, 0, 1, 0, 18, 0, 0, 16, 0, 14, 0, 0, 0, 0, 7, 0, 0, 1, 0, 0, 2, 0, 0, 5, 0, 0, 10, 0, 17, 0, 0, 0, 0, 22, 0, 0, 3, 0, 0, 0, 0, 0, 0, 6, 15, 0, 0, 0, 0, 0, 1, 0, 10, 6, 0, 0, 0, 17, 0, 7, 5, 0, 0, 4, 3, 0, 0, 0, 5, 0]
is_feasible = true
status = "optimal"
dual_gap = 7.515369510047165e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.517034907632409
(criterion, corr) = ("D", true)
(m, n, seed) = (100, 10, 1)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.4009743036271531
------------------------------------------------------------------------------------
          1|          1|          3| -5.58878e-01 -4.00974e-01 1.6e-01 3.9e-01| 5.0e-03 5.0e-03|  11
 [Integer solution found!]
       1236|       2466|       2471| -5.55390e-01 -5.55390e-01 1.8e-09 3.2e-09| 1.2e+00 1.0e-03|   1
------------------------------------------------------------------------------------
time = 1.202744283
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0]
solution = -0.5553901405399857
num_nodes = 2471
stage = 1
branch_count = [0, 0, 0, 107, 0, 0, 12, 53, 1, 0, 3, 0, 0, 1, 0, 41, 0, 0, 0, 2, 60, 0, 13, 0, 1, 0, 0, 0, 0, 0, 0, 70, 0, 49, 28, 0, 55, 22, 0, 55, 0, 34, 0, 0, 0, 0, 0, 38, 14, 1, 0, 0, 0, 0, 115, 0, 6, 0, 0, 4, 0, 42, 0, 0, 1, 0, 0, 0, 2, 0, 0, 16, 3, 73, 47, 59, 0, 0, 26, 0, 0, 1, 6, 0, 4, 0, 0, 0, 20, 88, 13, 34, 0, 0, 8, 0, 0, 0, 7, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.7977078714537242e-9
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5553901405399857
(criterion, corr) = ("D", true)
(m, n, seed) = (100, 10, 2)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3935660744283227
------------------------------------------------------------------------------------
          1|          1|          3| -5.36770e-01 -3.93566e-01 1.4e-01 3.6e-01| 1.0e-02 1.0e-02|  12
 [Integer solution found!]
        977|       1009|       1943| -5.33838e-01 -5.33834e-01 3.2e-06 6.0e-06| 1.1e+00 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 1.089757618
sol_x = [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5338343262575932
num_nodes = 1943
stage = 0
branch_count = [0, 0, 18, 0, 21, 0, 61, 0, 0, 0, 0, 0, 0, 0, 0, 11, 15, 0, 0, 63, 0, 24, 0, 0, 0, 36, 0, 39, 53, 0, 2, 0, 0, 0, 0, 0, 0, 0, 9, 0, 63, 0, 0, 39, 9, 0, 27, 31, 0, 48, 0, 0, 0, 0, 0, 5, 11, 12, 0, 18, 0, 0, 0, 0, 7, 0, 1, 5, 1, 0, 64, 0, 20, 24, 1, 24, 0, 27, 9, 0, 0, 0, 0, 0, 0, 0, 0, 42, 3, 2, 10, 17, 19, 27, 43, 10, 0, 0, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 3.186959444123616e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5338343262575932
(criterion, corr) = ("D", true)
(m, n, seed) = (100, 10, 3)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.3955151684558006
------------------------------------------------------------------------------------
          1|          1|          3| -5.45991e-01 -3.95515e-01 1.5e-01 3.8e-01| 1.7e-02 1.7e-02|   9
 [Integer solution found!]
       3765|       3967|       6917| -5.41864e-01 -5.41812e-01 5.2e-05 9.5e-05| 3.5e+00 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 3.492173337
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5418121903218459
num_nodes = 6917
stage = 0
branch_count = [0, 0, 0, 1, 71, 0, 68, 39, 0, 0, 0, 114, 0, 125, 7, 0, 0, 0, 30, 59, 85, 0, 0, 2, 0, 0, 0, 0, 7, 0, 0, 0, 0, 243, 0, 205, 1, 7, 156, 35, 0, 231, 0, 80, 1, 0, 0, 0, 0, 0, 0, 140, 0, 0, 20, 0, 56, 89, 0, 5, 142, 0, 125, 58, 92, 0, 133, 0, 163, 19, 0, 0, 0, 0, 120, 1, 0, 0, 0, 5, 37, 0, 0, 110, 0, 1, 40, 0, 227, 0, 0, 109, 0, 0, 0, 0, 3, 106, 90, 0]
is_feasible = true
status = "optimal"
dual_gap = 5.150998886860325e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5418121903218459
(criterion, corr) = ("D", true)
(m, n, seed) = (100, 10, 4)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.37980071124232995
------------------------------------------------------------------------------------
          1|          1|          3| -5.66087e-01 -3.79801e-01 1.9e-01 4.9e-01| 5.0e-03 5.0e-03|  13
 [Integer solution found!]
       2431|       2169|       4769| -5.62141e-01 -5.62130e-01 1.2e-05 2.1e-05| 2.1e+00 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 2.064558925
sol_x = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5621299074005841
num_nodes = 4769
stage = 0
branch_count = [0, 0, 184, 0, 50, 0, 0, 0, 0, 0, 106, 0, 9, 0, 2, 94, 39, 0, 73, 0, 0, 0, 0, 75, 139, 69, 0, 4, 2, 3, 87, 0, 105, 22, 2, 88, 0, 0, 0, 26, 83, 69, 84, 52, 0, 76, 0, 77, 109, 98, 8, 82, 2, 0, 37, 0, 113, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 1, 22, 0, 0, 0, 0, 0, 0, 7, 0, 21, 0, 46, 118, 0, 4, 0, 24, 0, 0, 0, 18, 19, 4, 0, 0, 0, 0, 0, 0, 0, 11, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.1530180961782932e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.562129907400584
(criterion, corr) = ("D", true)
(m, n, seed) = (100, 10, 5)
N = 15.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.37330491226253637
------------------------------------------------------------------------------------
          1|          1|          3| -5.45180e-01 -3.73305e-01 1.7e-01 4.6e-01| 6.0e-03 6.0e-03|  15
 [Integer solution found!]
        496|        988|        991| -5.42562e-01 -5.42562e-01 6.8e-08 1.2e-07| 4.1e-01 1.0e-03|   1
------------------------------------------------------------------------------------
time = 0.410294557
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0]
solution = -0.5425618881209422
num_nodes = 991
stage = 1
branch_count = [27, 0, 0, 0, 0, 0, 0, 1, 0, 18, 0, 0, 0, 18, 0, 14, 6, 0, 0, 2, 0, 34, 0, 0, 0, 1, 6, 0, 0, 1, 0, 0, 0, 21, 1, 0, 0, 41, 0, 0, 0, 9, 5, 0, 0, 10, 0, 0, 16, 0, 1, 0, 0, 0, 2, 27, 0, 0, 0, 0, 0, 0, 10, 24, 0, 0, 0, 0, 15, 0, 0, 12, 9, 0, 0, 0, 0, 0, 26, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 17, 0, 31, 0, 19, 0, 41, 0, 9, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 6.761813597933042e-8
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5425618881209422
(criterion, corr) = ("D", true)
(m, n, seed) = (120, 12, 1)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.4687798407687345
------------------------------------------------------------------------------------
          1|          1|          3| -5.86915e-01 -4.68780e-01 1.2e-01 2.5e-01| 5.0e-03 5.0e-03|  10
      10000|      11052|      20001| -5.82865e-01 -4.68780e-01 1.1e-01 2.4e-01| 1.1e+01 1.0e-03|   2
 [Integer solution found!]
      15453|      16711|      29937| -5.82632e-01 -5.82615e-01 1.6e-05 2.8e-05| 1.5e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 15.26997663
sol_x = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5826154678069759
num_nodes = 29937
stage = 0
branch_count = [263, 0, 0, 149, 0, 29, 18, 0, 0, 0, 1, 454, 0, 387, 0, 0, 876, 0, 619, 5, 0, 18, 0, 0, 603, 57, 36, 593, 0, 1, 382, 0, 0, 0, 516, 0, 0, 0, 920, 604, 0, 0, 0, 0, 4, 0, 0, 688, 0, 0, 0, 252, 243, 0, 8, 1, 0, 2, 0, 7, 531, 0, 3, 86, 0, 0, 0, 0, 612, 0, 0, 0, 0, 0, 387, 0, 0, 9, 327, 0, 5, 792, 0, 593, 0, 416, 0, 0, 0, 355, 391, 10, 0, 500, 5, 411, 143, 0, 0, 44, 153, 197, 0, 0, 14, 27, 0, 63, 0, 44, 4, 0, 588, 0, 0, 0, 519, 3, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.648165755907538e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.582615467806976
(criterion, corr) = ("D", true)
(m, n, seed) = (120, 12, 2)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.43122057195264585
------------------------------------------------------------------------------------
          1|          1|          3| -5.70204e-01 -4.31221e-01 1.4e-01 3.2e-01| 8.0e-03 8.0e-03|   9
      10000|      11104|      20001| -5.66025e-01 -4.31221e-01 1.3e-01 3.1e-01| 9.6e+00 1.0e-03|   2
      20000|      19238|      40001| -5.65626e-01 -4.31221e-01 1.3e-01 3.1e-01| 1.9e+01 1.0e-03|   2
      30000|      20544|      60001| -5.65390e-01 -4.31221e-01 1.3e-01 3.1e-01| 2.9e+01 1.0e-03|   3
 [Integer solution found!]
      36137|      24925|      71153| -5.65290e-01 -5.65280e-01 9.1e-06 1.6e-05| 3.4e+01 0.0e+00|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 34.074806657
sol_x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0]
solution = -0.5652804326213872
num_nodes = 71153
stage = 0
branch_count = [0, 0, 1193, 2, 320, 514, 0, 592, 0, 0, 0, 1, 695, 651, 0, 0, 158, 181, 0, 33, 32, 0, 0, 939, 68, 0, 142, 1457, 715, 873, 0, 1234, 3, 1, 0, 461, 0, 205, 943, 1, 66, 567, 0, 70, 0, 91, 0, 8, 0, 17, 0, 0, 3, 0, 864, 8, 12, 298, 2, 11, 278, 489, 1416, 1959, 242, 1245, 0, 0, 3, 0, 0, 74, 639, 460, 2, 224, 703, 0, 789, 0, 0, 778, 0, 588, 0, 0, 2, 841, 0, 1, 170, 2, 0, 0, 0, 808, 1641, 1830, 162, 641, 0, 435, 7, 0, 11, 0, 0, 426, 0, 0, 16, 13, 0, 0, 0, 371, 2046, 2369, 464, 0]
is_feasible = true
status = "optimal"
dual_gap = 9.122231884428622e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5652804326213872
(criterion, corr) = ("D", true)
(m, n, seed) = (120, 12, 3)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.4124400714377979
------------------------------------------------------------------------------------
          1|          1|          3| -5.85752e-01 -4.12440e-01 1.7e-01 4.2e-01| 9.0e-03 9.0e-03|  14
      10000|      17336|      20001| -5.82148e-01 -4.12440e-01 1.7e-01 4.1e-01| 9.3e+00 1.0e-03|   2
 [Integer solution found!]
 [Integer solution found!]
      11775|      16987|      22717| -5.82085e-01 -5.82068e-01 1.6e-05 2.8e-05| 1.1e+01 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 11.176683634
sol_x = [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5820682239269804
num_nodes = 22717
stage = 0
branch_count = [0, 0, 4, 200, 244, 240, 329, 0, 0, 683, 0, 284, 0, 0, 0, 1, 492, 0, 0, 5, 0, 3, 1, 293, 0, 0, 493, 563, 0, 316, 390, 685, 279, 0, 384, 152, 149, 305, 0, 0, 1, 0, 144, 0, 0, 0, 64, 9, 0, 35, 0, 0, 215, 321, 0, 133, 0, 0, 0, 15, 218, 1, 227, 0, 0, 0, 0, 0, 0, 67, 0, 65, 260, 52, 0, 8, 0, 0, 0, 6, 0, 2, 337, 0, 0, 319, 30, 8, 46, 0, 0, 0, 1, 37, 3, 283, 0, 62, 0, 58, 6, 0, 5, 0, 165, 219, 227, 137, 315, 0, 0, 359, 0, 5, 37, 53, 0, 308, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.634023875152213e-5
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5820682239269803
(criterion, corr) = ("D", true)
(m, n, seed) = (120, 12, 4)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.4594800916453732
------------------------------------------------------------------------------------
          1|          1|          3| -5.90008e-01 -4.59480e-01 1.3e-01 2.8e-01| 9.0e-03 9.0e-03|  11
 [Integer solution found!]
       6178|      12314|      12355| -5.86173e-01 -5.86173e-01 5.6e-07 9.6e-07| 5.2e+00 1.0e-03|   1
------------------------------------------------------------------------------------
time = 5.152281878
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
solution = -0.5861726363331152
num_nodes = 12355
stage = 1
branch_count = [0, 159, 0, 0, 0, 366, 36, 0, 58, 123, 219, 0, 280, 231, 0, 0, 0, 175, 0, 2, 0, 0, 12, 0, 209, 187, 0, 9, 40, 0, 208, 2, 0, 1, 0, 1, 23, 0, 1, 0, 0, 15, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 357, 0, 0, 30, 0, 0, 34, 63, 0, 0, 132, 18, 22, 173, 0, 0, 0, 249, 157, 0, 180, 0, 0, 0, 0, 255, 0, 0, 0, 354, 0, 0, 0, 388, 0, 0, 112, 60, 241, 0, 115, 56, 0, 0, 14, 0, 0, 0, 321, 0, 0, 0, 1, 0, 0, 201, 125, 0, 0, 131, 0, 0, 0, 30]
is_feasible = true
status = "optimal"
dual_gap = 5.621698293545307e-7
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5861726363331152
(criterion, corr) = ("D", true)
(m, n, seed) = (120, 12, 5)
N = 18.0
time_limit = 7200.0
------------------------------------------------------------------------------------
x0_int = [1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
fx0 = -0.43573596680303034
------------------------------------------------------------------------------------
          1|          1|          3| -5.80777e-01 -4.35736e-01 1.5e-01 3.3e-01| 8.0e-03 8.0e-03|  12
 [Integer solution found!]
       1219|       1763|       2419| -5.77933e-01 -5.77931e-01 1.6e-06 2.8e-06| 1.0e+00 1.0e-03|   2
 [Node cut because it is worse than the incumbent!]
------------------------------------------------------------------------------------
time = 1.01528788
sol_x = [0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
solution = -0.5779309319829065
num_nodes = 2419
stage = 0
branch_count = [63, 27, 0, 0, 0, 25, 8, 0, 22, 0, 0, 0, 11, 44, 0, 0, 30, 6, 0, 0, 41, 0, 0, 80, 0, 27, 0, 20, 0, 0, 0, 41, 0, 0, 0, 66, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 5, 12, 0, 0, 0, 0, 31, 0, 0, 0, 0, 0, 3, 6, 0, 0, 79, 0, 0, 0, 34, 0, 92, 0, 25, 1, 0, 0, 3, 0, 0, 2, 22, 6, 67, 30, 0, 0, 29, 0, 0, 0, 0, 0, 13, 8, 5, 0, 2, 12, 80, 0, 29, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 1, 0, 40, 4, 0, 0]
is_feasible = true
status = "optimal"
dual_gap = 1.6435435475914417e-6
------------------------------------------------------------------------------------

obj = -(log(LinearAlgebra.det(transpose(A) * diagm(x) * A))) / m = -0.5779309319829063
